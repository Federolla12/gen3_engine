{
  "version": 3,
  "sources": ["../../../../data/mods/gen9fe/abilities.ts"],
  "sourcesContent": ["import type { EffectState } from \"../../../sim/pokemon\";\n\nexport const Abilities: import('../../../sim/dex-abilities').ModdedAbilityDataTable = {\n\t/* FEG9 abils */\n\tunfiltered: {\n\t\tshortDesc: \"Filter + Contrary + This Pokemon's NvE Moves deal 4/3x damage.\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\n\t\t\t\tthis.debug('Unfiltered neutralize');\n\t\t\t\treturn this.chainModify(0.75);\n\t\t\t}\n\t\t},\n\t\tonChangeBoost(boost, target, source, effect) {\n\t\t\tif (effect?.id === 'zpower') return;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tboost[i]! *= -1;\n\t\t\t}\n\t\t},\n\t\tonModifyDamage(damage, source, target, move) {\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\n\t\t\t\tthis.debug('Unfiltered boost');\n\t\t\t\treturn this.chainModify([5461, 4096]);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Unfiltered\",\n\t},\n\tquickstart: {\n\t\tshortDesc: \"On switch-in, this Pokemon's Attack and Speed are doubled for 5 turns.\",\n\t\tonStart(pokemon) {\n\t\t\tpokemon.addVolatile('quickstart');\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['quickstart'];\n\t\t\tthis.add('-end', pokemon, 'Quickstart', '[silent]');\n\t\t},\n\t\tcondition: {\n\t\t\tduration: 5,\n\t\t\tonStart(target) {\n\t\t\t\tthis.add('-start', target, 'ability: Quickstart');\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t},\n\t\t\tonEnd(target) {\n\t\t\t\tthis.add('-end', target, 'Quickstart');\n\t\t\t},\n\t\t},\n\t\tflags: {},\n\t\tname: \"Quickstart\",\n\t},\n\tholygrail: {\n\t\tshortDesc: \"Good As Gold + Levitate\",\n\t\tonTryHit(target, source, move) {\n\t\t\tif (move.category === 'Status' && target !== source) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Holy Grail');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Holy Grail\",\n\t},\n\talldevouring: {\n\t\tshortDesc: \"Beast Boost + Run Away\",\n\t\tonSourceAfterFaint(length, target, source, effect) {\n\t\t\tif (effect?.effectType === 'Move') {\n\t\t\t\tconst bestStat = source.getBestStat(true, true);\n\t\t\t\tthis.boost({ [bestStat]: length }, source);\n\t\t\t}\n\t\t},\n\t\tname: \"All-Devouring\",\n\t},\n\tgalvanicrelay: {\n\t\tshortDesc: \"Mycelium Might + Transistor; Electric attacks also ignore abilities.\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Electric') {\n\t\t\t\tthis.debug('Galvanic Relay boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Electric') {\n\t\t\t\tthis.debug('Galvanic Relay boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t}\n\t\t},\n\t\tonFractionalPriorityPriority: -1,\n\t\tonFractionalPriority(priority, pokemon, target, move) {\n\t\t\tif (move.category === 'Status') {\n\t\t\t\treturn -0.1;\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tif (move.category === 'Status' || move.type === 'Electric') {\n\t\t\t\tmove.ignoreAbility = true;\n\t\t\t}\n\t\t},\n\t\tname: \"Galvanic Relay\",\n\t},\n\tforestfury: {\n\t\tshortDesc: \"Intimidate + Hyper Cutter + Cannot be statused by opponents.\",\n\t\tonStart(pokemon) {\n\t\t\tlet activated = false;\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\n\t\t\t\tif (!activated) {\n\t\t\t\t\tthis.add('-ability', pokemon, 'Forest Fury', 'boost');\n\t\t\t\t\tactivated = true;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['substitute']) {\n\t\t\t\t\tthis.add('-immune', target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({ atk: -1 }, target, pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\tif (boost.atk && boost.atk < 0) {\n\t\t\t\tdelete boost.atk;\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"Attack\", \"[from] ability: Forest Fury\", `[of] ${target}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Forest Fury');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonTryAddVolatile(status, target) {\n\t\t\tif (status.id === 'yawn') {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Forest Fury');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Forest Fury\",\n\t},\n\tgrowthspurt: {\n\t\tshortDesc: \"Effects of Harvest; Berry is restored at 1/3 or less of its max HP.\",\n\t\tonResidualOrder: 26,\n\t\tonResidualSubOrder: 1,\n\t\tonResidual(pokemon) {\n\t\t\tif (pokemon.hp && !pokemon.item && this.dex.items.get(pokemon.lastItem).isBerry &&\n\t\t\t\t(this.field.isWeather(['sunnyday', 'desolateland']) || this.randomChance(1, 2))) {\n\t\t\t\tpokemon.setItem(pokemon.lastItem);\n\t\t\t\tpokemon.lastItem = '';\n\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Growth Spurt');\n\t\t\t}\n\t\t},\n\t\tonAfterMoveSecondary(target, source, move) {\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\n\t\t\tif (!lastAttackedBy) return;\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\n\t\t\tconst threshold = target.maxhp / 3;\n\t\t\tif (target.hp <= threshold && target.hp + damage > threshold && !target.item &&\n\t\t\t\tthis.dex.items.get(target.lastItem).isBerry) {\n\t\t\t\ttarget.setItem(target.lastItem);\n\t\t\t\ttarget.lastItem = '';\n\t\t\t\tthis.add('-item', target, target.getItem(), '[from] ability: Growth Spurt');\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Growth Spurt\",\n\t},\n\tlightdrive: {\n\t\tshortDesc: \"Light Metal + Quark Drive. Quark Drive activates if the user is lighter.\",\n\t\tonModifyWeight(weighthg) {\n\t\t\treturn this.trunc(weighthg / 2);\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('lightdrive');\n\t\t\t} else if (!pokemon.volatiles['lightdrive']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('lightdrive');\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (!(pokemon.volatiles['lightdrive']?.fromBooster ||\n\t\t\t\tpokemon.volatiles['lightdrive']?.fromWeightDiff) && !this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.removeVolatile('lightdrive');\n\t\t\t}\n\t\t},\n\t\tonAnyPrepareHit(source, target, move) {\n\t\t\tif (move.hasBounced || source === target) return;\n\t\t\tconst user = this.effectState.target;\n\t\t\tif (user.volatiles['lightdrive'] && !user.volatiles['lightdrive'].fromWeightDiff) return;\n\t\t\tlet yourweight;\n\t\t\tif (source === user) {\n\t\t\t\tyourweight = target.getWeight();\n\t\t\t} else if (target === user) {\n\t\t\t\tyourweight = source.getWeight();\n\t\t\t} else return;\n\t\t\tif (user.getWeight() < yourweight) {\n\t\t\t\tif (user.volatiles['lightdrive']) return;\n\t\t\t\tuser.addVolatile('lightdrive');\n\t\t\t\tuser.volatiles['lightdrive'].fromWeightDiff = true;\n\t\t\t} else if (user.volatiles['lightdrive']) {\n\t\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\t\tuser.volatiles['lightdrive'].fromWeightDiff = false;\n\t\t\t\t} else {\n\t\t\t\t\tuser.removeVolatile('lightdrive');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['lightdrive'];\n\t\t\tthis.add('-end', pokemon, 'Light Drive', '[silent]');\n\t\t},\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Light Drive', '[fromitem]');\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Light Drive');\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Light Drive atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Light Drive def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Light Drive spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Light Drive spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.debug('Light Drive spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\n\t\t\t},\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Light Drive\",\n\t},\n\tscraprock: {\n\t\tshortDesc: \"Scrappy + Solid Rock\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\n\t\t\t\tthis.debug('Scrap Rock neutralize');\n\t\t\t\treturn this.chainModify(0.75);\n\t\t\t}\n\t\t},\n\t\tonModifyMovePriority: -5,\n\t\tonModifyMove(move) {\n\t\t\t// if ignoreImmunity does not exist replace with blank object\n\t\t\t// If it's not unconditional then populate Fighting and Normal fields\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (\n\t\t\t\t['Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude'].includes(effect.name) && boost.atk) {\n\t\t\t\tdelete boost.atk;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Scrap Rock', `[of] ${target}`);\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Scrap Rock', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Scrap Rock\",\n\t\trating: 3,\n\t},\n\treachless: {\n\t\tshortDesc: \"Effects of Rock Head and Reckless.\",\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.recoil || move.hasCrashDamage) {\n\t\t\t\tthis.debug('Reachless boost');\n\t\t\t\treturn this.chainModify([0x1333, 0x1000]);\n\t\t\t}\n\t\t},\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'recoil') {\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Reachless\",\n\t\trating: 3,\n\t},\n\topeningact: {\n\t\tshortDesc: \"Protosynthesis + Prankster. Protosynthesis also activates when using a priority move.\",\n\t\tonPrepareHit(source, target, move) {\n\t\t\tconst isItSunny = this.field.isWeather('sunnyday');\n\t\t\tif (move.priority > 0) {\n\t\t\t\tif (isItSunny || source.volatiles['openingact']) return;\n\t\t\t\tsource.addVolatile('openingact');\n\t\t\t\tconsole.log(\"Volatiles\");\n\t\t\t\tconsole.log(source.volatiles);\n\t\t\t\tconsole.log(Object.getOwnPropertyNames(source.volatiles));\n\t\t\t\tconst vol: EffectState = source.volatiles['openingact'];\n\t\t\t\tvol.fromPriority = true;\n\t\t\t} else if (source.volatiles['openingact']?.fromPriority) {\n\t\t\t\tif (isItSunny) {\n\t\t\t\t\tsource.volatiles['openingact'].fromPriority = false;\n\t\t\t\t} else {\n\t\t\t\t\tsource.removeVolatile('openingact');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonModifyPriority(priority, pokemon, target, move) {\n\t\t\tif (move?.category === 'Status') {\n\t\t\t\tmove.pranksterBoosted = true;\n\t\t\t\treturn priority + 1;\n\t\t\t}\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonWeatherChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\n\t\t\tif (this.field.isWeather('sunnyday')) {\n\t\t\t\tpokemon.addVolatile('openingact');\n\t\t\t} else if (!(pokemon.volatiles['openingact']?.fromBooster || pokemon.volatiles['openingact']?.fromPriority)) {\n\t\t\t\tpokemon.removeVolatile('openingact');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['openingact'];\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\n\t\t},\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect?.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Opening Act', '[fromitem]');\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Opening Act');\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Opening Act atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Opening Act def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Opening Act spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Opening Act spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.debug('Opening Act spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\n\t\t\t},\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Opening Act\",\n\t\trating: 3,\n\t},\n\tnecromancer: {\n\t\tshortDesc: \"This Pokemon's offensive stat is multiplied by 1.5 while using a Ghost-type attack and takes 50% damage from Ghost and Steel attacks; can't be statused.\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ghost') {\n\t\t\t\tthis.debug('Necromancer boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ghost') {\n\t\t\t\tthis.debug('Necromancer boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifyAtkPriority: 6,\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ghost' || move.type === 'Steel') {\n\t\t\t\tthis.debug('Necromancer weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifySpAPriority: 5,\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ghost' || move.type === 'Steel') {\n\t\t\t\tthis.debug('Necromancer weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Necromancer');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonTryAddVolatile(status, target) {\n\t\t\tif (status.id === 'yawn') {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Necromancer');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Necromancer\",\n\t\trating: 3,\n\t},\n\tregainpatience: {\n\t\tshortDesc: \"Berserk + Regenerator\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tthis.effectState.checkedBerserk = !!(effect.effectType !== \"Move\" || effect.multihit || effect.negateSecondary ||\n\t\t\t\t(effect.hasSheerForce && source.hasAbility(['overwhelming', 'sheerforce', 'forceofnature', 'sandwrath'])));\n\t\t},\n\t\tonTryEatItem(item) {\n\t\t\tconst healingItems = [\n\t\t\t\t'aguavberry', 'enigmaberry', 'figyberry', 'iapapaberry', 'magoberry', 'sitrusberry', 'wikiberry', 'oranberry', 'berryjuice',\n\t\t\t];\n\t\t\treturn (!healingItems.includes(item.id) || this.effectState.checkedBerserk);\n\t\t},\n\t\tonAfterMoveSecondary(target, source, move) {\n\t\t\tthis.effectState.checkedBerserk = true;\n\t\t\tif (!source || source === target || !target.hp || !move.totalDamage) return;\n\t\t\tconst lastAttackedBy = target.getLastAttackedBy();\n\t\t\tif (!lastAttackedBy) return;\n\t\t\tconst damage = move.multihit ? move.totalDamage : lastAttackedBy.damage;\n\t\t\tconst threshold = target.maxhp * 0.5;\n\t\t\tif (target.hp <= threshold && target.hp + damage > threshold) {\n\t\t\t\tthis.boost({ spa: 1 }, target, target);\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Regain Patience\",\n\t\trating: 3,\n\t},\n\tquarksurge: {\n\t\tshortDesc: \"Quark Drive + Electric Surge\",\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t\tthis.field.setTerrain('electricterrain');\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('quarkdrive');\n\t\t\t} else if (!pokemon.volatiles['quarkdrive']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('quarkdrive');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['quarkdrive'];\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Quark Surge\",\n\t\trating: 3,\n\t},\n\tonceuponatime: {\n\t\tshortDesc: \"Protosynthesis + Infiltrator\",\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonWeatherChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\n\t\t\tif (this.field.isWeather('sunnyday')) {\n\t\t\t\tpokemon.addVolatile('protosynthesis');\n\t\t\t} else if (!pokemon.volatiles['protosynthesis']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('protosynthesis');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['protosynthesis'];\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tmove.infiltrates = true;\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Once Upon a Time\",\n\t\trating: 3,\n\t},\n\tprimitive: {\n\t\tshortDesc: \"Protosynthesis + Oblivious\",\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (type === 'attract') return false;\n\t\t},\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (['attract', 'captivate', 'taunt'].includes(move.id)) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Primitive');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (\n\t\t\t\t['Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude'].includes(effect.name) && boost.atk) {\n\t\t\t\tdelete boost.atk;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Primitive', `[of] ${target}`);\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Primitive', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tonWeatherChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\n\t\t\tif (this.field.isWeather('sunnyday')) {\n\t\t\t\tpokemon.addVolatile('protosynthesis');\n\t\t\t} else if (!pokemon.volatiles['protosynthesis']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('protosynthesis');\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.volatiles['attract']) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Primitive');\n\t\t\t\tpokemon.removeVolatile('attract');\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: Primitive');\n\t\t\t}\n\t\t\tif (pokemon.volatiles['taunt']) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Primitive');\n\t\t\t\tpokemon.removeVolatile('taunt');\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['protosynthesis'];\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\n\t\t},\n\t\tflags: { breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Primitive\",\n\t\trating: 3,\n\t},\n\tbaryonblade: {\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('baryonblade');\n\t\t\t} else if (!pokemon.volatiles['baryonblade']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('baryonblade');\n\t\t\t}\n\t\t},\n\t\tonModifyCritRatio(critRatio) {\n\t\t\treturn critRatio + 1;\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['baryonblade'];\n\t\t\tthis.add('-end', pokemon, 'Baryon Blade', '[silent]');\n\t\t},\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect?.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Baryon Blade', '[fromitem]');\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Baryon Blade');\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyCritRatio(critRatio) {\n\t\t\t\treturn critRatio + 1;\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Baryon Blade', '[silent]');\n\t\t\t},\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Baryon Blade\",\n\t\tshortDesc: \"Quark Drive effects. +1 Critrate; +2 instead under Quark Drive.\",\n\t},\n\tmadcow: {\n\t\tshortDesc: \"On switch-in, or when this Pokemon is lowered to 50% max HP, the foe's Attack is lowered by 1 stage.\",\n\t\tonStart(pokemon) {\n\t\t\tlet activated = false;\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\n\t\t\t\tif (!activated) {\n\t\t\t\t\tthis.add('-ability', pokemon, 'Mad Cow', 'boost');\n\t\t\t\t\tactivated = true;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['substitute']) {\n\t\t\t\t\tthis.add('-immune', target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({ atk: -1 }, target, pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonEmergencyExit(target) {\n\t\t\tif (!this.canSwitch(target.side) || target.forceSwitchFlag || target.switchFlag) return;\n\t\t\tfor (const side of this.sides) {\n\t\t\t\tfor (const active of side.active) {\n\t\t\t\t\tactive.switchFlag = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.add('-activate', target, 'ability: Mad Cow');\n\t\t\tfor (const pokemon of target.adjacentFoes()) {\n\t\t\t\tif (pokemon.volatiles['substitute']) {\n\t\t\t\t\tthis.add('-immune', pokemon);\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({ atk: -1 }, pokemon, target, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget.switchFlag = false;\n\t\t},\n\t\tflags: {},\n\t\tname: \"Mad Cow\",\n\t\trating: 3.5,\n\t},\n\tchoreography: {\n\t\tshortDesc: \"Protean + Dancer; Dancer is once per switch-in instead of Protean.\",\n\t\tonPrepareHit(source, target, move) {\n\t\t\tif (move.hasBounced || move.flags['futuremove'] || move.sourceEffect === 'snatch' || move.callsMove) return;\n\t\t\tconst type = move.type;\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type && source.setType(type)) {\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Choreography');\n\t\t\t}\n\t\t},\n\t\tonSwitchIn(pokemon) {\n\t\t\tdelete this.effectState.choreography;\n\t\t},\n\t\tflags: {},\n\t\tname: \"Choreography\",\n\t\trating: 4,\n\t},\n\tsquall: {\n\t\tshortDesc: \"+1 Atk if hit by a Fire or Ice move or Tailwind begins; Fire & Ice immunity.\",\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && (move.type === 'Ice' || move.type === 'Fire')) {\n\t\t\t\tif (!this.boost({ atk: 1 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Squall');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (target === this.effectState.target || target.side !== source.side) return;\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\n\t\t\t\tthis.boost({ atk: 1 }, this.effectState.target);\n\t\t\t}\n\t\t},\n\t\tonAllySideConditionStart(target, source, sideCondition) {\n\t\t\tconst pokemon = this.effectState.target;\n\t\t\tif (sideCondition.id === 'tailwind') {\n\t\t\t\tthis.boost({ atk: 1 }, pokemon, pokemon);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Squall\",\n\t\trating: 4,\n\t},\n\tstoneage: {\n\t\tshortDesc: \"Sturdy + Technician\",\n\t\tonBeforeMovePriority: 9,\n\t\tonBeforeMove(pokemon) {\n\t\t\tif (pokemon.species.name !== 'Relishadow' || pokemon.transformed) return;\n\t\t\tpokemon.formeChange('Relishadow-Zenith');\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\n\t\t},\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (move.ohko) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Stone Age');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagePriority: -100,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\n\t\t\t\tthis.add('-ability', target, 'Stone Age');\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 30,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\n\t\t\tthis.debug(`Base Power: ${basePowerAfterMultiplier}`);\n\t\t\tif (basePowerAfterMultiplier <= 60) {\n\t\t\t\tthis.debug('Stone Age boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Stone Age\",\n\t\trating: 3,\n\t},\n\tstonewheel: {\n\t\tshortDesc: \"Rock Head + Technician\",\n\t\tonBeforeMovePriority: 9,\n\t\tonBeforeMove(pokemon) {\n\t\t\tif (pokemon.species.name !== 'Relishadow' || pokemon.transformed) return;\n\t\t\tpokemon.formeChange('Relishadow-Zenith');\n\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\n\t\t},\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'recoil') {\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 30,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\n\t\t\tthis.debug(`Base Power: ${basePowerAfterMultiplier}`);\n\t\t\tif (basePowerAfterMultiplier <= 60) {\n\t\t\t\tthis.debug('Stone Age boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Stone Wheel\",\n\t\trating: 3,\n\t},\n\tmoltencore: {\n\t\tshortDesc: \"Turboblaze + Rock Head\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'recoil') {\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\n\t\t\t}\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Molten Core');\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreAbility = true;\n\t\t},\n\t\tflags: {},\n\t\tname: \"Molten Core\",\n\t\trating: 3,\n\t},\n\teczema: {\n\t\tshortDesc: \"Unaware + Rough Skin\",\n\t\tonDamagingHitOrder: 1,\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\n\t\t\t}\n\t\t},\n\t\t// Okay so Mold Breaker hits through Rough Skin but not Unaware\n\t\t// While Rough Skin announces itself through its effects, UNAWARE DOESN'T\n\t\tonStart(pokemon) {\n\t\t\tpokemon.addVolatile('ability:unaware');\n\t\t},\n\t\tonSourcePrepareHit(source, target, move) {\n\t\t\tif (target.volatiles['ability:unaware']) {\n\t\t\t\tif (move.ignoreAbility) target.removeVolatile('ability:unaware');\n\t\t\t} else if (!move.ignoreAbility) target.addVolatile('ability:unaware');\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tpokemon.removeVolatile('ability:unaware');\n\t\t},\n\t\tflags: {},\n\t\tname: \"Eczema\",\n\t\trating: 3,\n\t},\n\taurashield: {\n\t\tshortDesc: \"Shield Dust + Moves with secondary effects used by any Pokemon have 1.33x power.\",\n\t\tonModifySecondaries(secondaries) {\n\t\t\tthis.debug('Aura Shield prevent secondary');\n\t\t\treturn secondaries.filter(effect => !!effect.self);\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Aura Shield');\n\t\t},\n\t\tonAnyBasePowerPriority: 20,\n\t\tonAnyBasePower(basePower, source, target, move) {\n\t\t\tif (target === source || move.category === 'Status' || !move.secondaries) return;\n\t\t\tif (!move.auraBooster) move.auraBooster = this.effectState.target;\n\t\t\telse if (move.auraBooster !== this.effectState.target) return;\n\t\t\treturn this.chainModify([move.hasAuraBreak ? 0x0C00 : 0x1547, 0x1000]);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Aura Shield\",\n\t\trating: 3,\n\t},\n\tfaultyphoton: {\n\t\tshortDesc: \"Disguise + Quark Drive\",\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonDamagePriority: 1,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect?.effectType === 'Move' && target.species.id === 'ironmimic' && !target.transformed) {\n\t\t\t\tthis.add('-activate', target, 'ability: Faulty Photon');\n\t\t\t\tthis.effectState.busted = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tonCriticalHit(target, source, move) {\n\t\t\tif (!target || target.species.id !== 'ironmimic' || target.transformed || !target.runImmunity(move.type)) return;\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates);\n\t\t\tif (hitSub) return;\n\t\t\treturn false;\n\t\t},\n\t\tonEffectiveness(typeMod, target, type, move) {\n\t\t\tif (!target || target.species.id !== 'ironmimic' || target.transformed || !target.runImmunity(move.type)) return;\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates);\n\t\t\tif (hitSub) return;\n\t\t\treturn 0;\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.species.id === 'ironmimic' && this.effectState.busted) {\n\t\t\t\tpokemon.formeChange('Iron Mimic-Busted', this.effect, true);\n\t\t\t\tthis.add('-start', pokemon, 'typechange', pokemon.getTypes(true).join('/'), '[silent]');\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get('Iron Mimic-Busted'));\n\t\t\t}\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('quarkdrive');\n\t\t\t} else if (!pokemon.volatiles['quarkdrive']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('quarkdrive');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['quarkdrive'];\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\n\t\t},\n\t\tflags: {\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1,\n\t\t\tbreakable: 1, notransform: 1,\n\t\t},\n\t\tname: \"Faulty Photon\",\n\t\trating: 3,\n\t},\n\tdyschronometria: {\n\t\tshortDesc: \"While this Pokemon is active, all Paradox boosts are suppressed.\",\n\t\t// onAnyModifyAtkPriority: 4,\n\t\tonAnyModifyAtk(atk, attacker, defender, move) {\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (attacker.isAlly(abilityHolder) || attacker.ignoringAbility() || !this.effectState.unnerved) return;\n\t\t\tif (!this.effectState.suppressedParadox) this.effectState.suppressedParadox = abilityHolder;\n\t\t\telse if (this.effectState.suppressedParadox !== abilityHolder) return;\n\t\t\tfor (const paradox of ['faultyphoton', 'baryonblade', 'onceuponatime', 'primitive', 'quarksurge',\n\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall',\n\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\n\t\t\t\tif (attacker.hasAbility(paradox)) {\n\t\t\t\t\tif ((attacker?.volatiles['quarkdrive'] || attacker?.volatiles['protosynthesis'] ||\n\t\t\t\t\t\tattacker?.volatiles[paradox])?.bestStat !== 'atk') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.debug('Dyschronometria nullify');\n\t\t\t\t\treturn this.chainModify([3151, 4096]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// onAnyModifyDefPriority: 5,\n\t\tonAnyModifyDef(def, attacker, defender, move) {\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (defender.isAlly(abilityHolder) || defender.ignoringAbility() || !this.effectState.unnerved) return;\n\t\t\tif (!this.effectState.suppressedParadox) this.effectState.suppressedParadox = abilityHolder;\n\t\t\telse if (this.effectState.suppressedParadox !== abilityHolder) return;\n\t\t\tfor (const paradox of ['faultyphoton', 'baryonblade', 'onceuponatime', 'primitive', 'quarksurge',\n\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall',\n\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\n\t\t\t\tif (defender.hasAbility(paradox)) {\n\t\t\t\t\tif ((defender?.volatiles['quarkdrive'] || defender?.volatiles['protosynthesis'] ||\n\t\t\t\t\t\tdefender?.volatiles[paradox])?.bestStat !== 'def') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.debug('Dyschronometria nullify');\n\t\t\t\t\treturn this.chainModify([3151, 4096]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// onAnyModifySpAPriority: 4,\n\t\tonAnyModifySpA(spa, attacker, defender, move) {\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (attacker.isAlly(abilityHolder) || attacker.ignoringAbility() || !this.effectState.unnerved) return;\n\t\t\tif (!this.effectState.suppressedParadox) this.effectState.suppressedParadox = abilityHolder;\n\t\t\telse if (this.effectState.suppressedParadox !== abilityHolder) return;\n\t\t\tfor (const paradox of ['faultyphoton', 'baryonblade', 'onceuponatime', 'primitive', 'quarksurge',\n\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall',\n\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\n\t\t\t\tif (attacker.hasAbility(paradox)) {\n\t\t\t\t\tif ((attacker?.volatiles['quarkdrive'] || attacker?.volatiles['protosynthesis'] ||\n\t\t\t\t\t\tattacker?.volatiles[paradox])?.bestStat !== 'spa') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.debug('Dyschronometria nullify');\n\t\t\t\t\treturn this.chainModify([3151, 4096]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// onAnyModifySpDPriority: 5,\n\t\tonAnyModifySpD(spd, attacker, defender, move) {\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (defender.isAlly(abilityHolder) || defender.ignoringAbility() || !this.effectState.unnerved) return;\n\t\t\tif (!this.effectState.suppressedParadox) this.effectState.suppressedParadox = abilityHolder;\n\t\t\telse if (this.effectState.suppressedParadox !== abilityHolder) return;\n\t\t\tfor (const paradox of ['faultyphoton', 'baryonblade', 'onceuponatime', 'primitive', 'quarksurge',\n\t\t\t\t'lightdrive', 'openingact', 'protosynthesis', 'quarkdrive', 'nanorepairs', 'firewall',\n\t\t\t\t'weightoflife', 'circuitbreaker', 'ancientmarble', 'prehistorichunter', 'heatproofdrive']) {\n\t\t\t\tif (defender.hasAbility(paradox)) {\n\t\t\t\t\tif ((defender?.volatiles['quarkdrive'] || defender?.volatiles['protosynthesis'] ||\n\t\t\t\t\t\tdefender?.volatiles[paradox])?.bestStat !== 'spd') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.debug('Dyschronometria nullify');\n\t\t\t\t\treturn this.chainModify([3151, 4096]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Speed suppression in the other Paradox abilities\n\t\tonSwitchInPriority: 1,\n\t\tonStart(pokemon) {\n\t\t\tif (this.effectState.unnerved) return;\n\t\t\tthis.add('-ability', pokemon, 'Dyschronometria');\n\t\t\tthis.effectState.unnerved = true;\n\t\t},\n\t\tonEnd() {\n\t\t\tthis.effectState.unnerved = false;\n\t\t},\n\t\tflags: { breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Dyschronometria\",\n\t\trating: 3,\n\t},\n\tfirewall: {\n\t\tshortDesc: \"Quark Drive + x1.5 power to Fire-type moves when active\",\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire' && attacker.volatiles['quarkdrive']) {\n\t\t\t\tthis.debug('Firewall Fire boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire' && attacker.volatiles['quarkdrive']) {\n\t\t\t\tthis.debug('Firewall Fire boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('quarkdrive');\n\t\t\t} else if (!pokemon.volatiles['quarkdrive']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('quarkdrive');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['quarkdrive'];\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Firewall\",\n\t\trating: 3,\n\t},\n\tnanorepairs: {\n\t\tshortDesc: \"Quark Drive + Regenerator\",\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('quarkdrive');\n\t\t\t} else if (!pokemon.volatiles['quarkdrive']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('quarkdrive');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['quarkdrive'];\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Nanorepairs\",\n\t\trating: 3,\n\t},\n\tironsights: {\n\t\tshortDesc: \"x1.33 Atk/SpA/Acc.\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk) {\n\t\t\treturn this.chainModify([5461, 4096]);\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(spa) {\n\t\t\treturn this.chainModify([5461, 4096]);\n\t\t},\n\t\tonSourceModifyAccuracyPriority: -1,\n\t\tonSourceModifyAccuracy(accuracy) {\n\t\t\tif (typeof accuracy !== 'number') return;\n\t\t\tthis.debug('ironsights - enhancing accuracy');\n\t\t\treturn this.chainModify([5461, 4096]);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Iron Sights\",\n\t\trating: 3,\n\t},\n\trejuvenate: {\n\t\tshortDesc: \"On switch-out: If no status then heal 1/3 Max HP, else heal status\",\n\t\tonCheckShow(pokemon) {\n\t\t\t// This is complicated\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Cure activated,\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\n\t\t\t// that could have Natural Cure switch out, but only some of them get cured.\n\t\t\tif (pokemon.side.active.length === 1 || pokemon.showCure === true || pokemon.showCure === false) return;\n\n\t\t\tconst cureList = [];\n\t\t\tlet noCureCount = 0;\n\t\t\tfor (const curPoke of pokemon.side.active) {\n\t\t\t\t// pokemon not statused\n\t\t\t\tif (!curPoke || !curPoke.status) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (curPoke.showCure) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Rejuvenate already known\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst species = curPoke.species;\n\t\t\t\t// pokemon can't get Natural Cure\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') &&\n\t\t\t\t\t!Object.values(species.abilities).includes('Natural Pressures') &&\n\t\t\t\t\t!Object.values(species.abilities).includes('Rejuvenate')) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Rejuvenate\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// pokemon's ability is known to be Natural Cure\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// pokemon isn't switching this turn\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (curPoke.hasAbility(['naturalcure', 'rejuvenate', 'naturalpressures'])) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Rejuvenate (and is)\");\n\t\t\t\t\tcureList.push(curPoke);\n\t\t\t\t} else {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Rejuvenate (but isn't)\");\n\t\t\t\t\tnoCureCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!cureList.length || !noCureCount) {\n\t\t\t\t// It's possible to know what pokemon were cured\n\t\t\t\tfor (const pkmn of cureList) {\n\t\t\t\t\tpkmn.showCure = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// It's not possible to know what pokemon were cured\n\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\n\t\t\t\tthis.add('-message', `(${cureList.length} of ${pokemon.side.name}'s pokemon ${cureList.length === 1 ? \"was\" : \"were\"} cured by Natural Cure.)`);\n\n\t\t\t\tfor (const pkmn of cureList) {\n\t\t\t\t\tpkmn.showCure = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tif (!pokemon.status) {\n\t\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pokemon.showCure === undefined) pokemon.showCure = true;\n\t\t\tif (pokemon.showCure) this.add('-curestatus', pokemon, pokemon.status, '[from] ability: Rejuvenate');\n\t\t\tpokemon.setStatus('');\n\t\t\t// only reset .showCure if it's false\n\t\t\t// (once you know a Pokemon has Natural Cure, its cures are always known)\n\t\t\tpokemon.showCure ||= undefined;\n\t\t},\n\t\tflags: {},\n\t\tname: \"Rejuvenate\",\n\t\trating: 3,\n\t},\n\telectromagneticveil: {\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Electric moves or burned; Electric & Burn immunity.\",\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Electric') {\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Electromagnetic Veil');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif (status.id !== 'brn') return;\n\t\t\tif ((effect as Move)?.status && !this.heal(target.baseMaxhp / 4)) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Electromagnetic Veil');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.status === 'brn') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Electromagnetic Veil');\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 4);\n\t\t\t\tpokemon.cureStatus();\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Electromagnetic Veil\",\n\t\trating: 3,\n\t},\n\trisingtension: {\n\t\tshortDesc: \"Levitate + Cursed Body\",\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (source.volatiles['disable']) return;\n\t\t\tif (!move.isMax && !move.flags['futuremove'] && move.id !== 'struggle') {\n\t\t\t\tif (this.randomChance(3, 10)) {\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Rising Tension\",\n\t\trating: 3,\n\t},\n\tgrindset: {\n\t\tshortDesc: \"While active, own Attack is 1.5x, other Pokemon's Attack is 0.5.\",\n\t\tonStart(pokemon) {\n\t\t\tif (this.suppressingAbility(pokemon)) return;\n\t\t\tthis.add('-ability', pokemon, 'Grindset');\n\t\t\tthis.add('-message', `The grind never stops for ${pokemon.name}, lowering the foe's Attack and raising its own!`);\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk) {\n\t\t\treturn this.chainModify(1.5);\n\t\t},\n\t\tonAnyModifyAtk(atk, source, target, move) {\n\t\t\tif (source.hasAbility('Grindset')) return;\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (!move.ruinedAtk) move.ruinedAtk = abilityHolder;\n\t\t\telse if (move.ruinedAtk !== abilityHolder) return;\n\t\t\tthis.debug('Grindset Atk drop');\n\t\t\treturn this.chainModify(0.5);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Grindset\",\n\t\trating: 3,\n\t},\n\tshockfactor: {\n\t\tshortDesc: \"Static + Intimidate\",\n\t\tonStart(pokemon) {\n\t\t\tlet activated = false;\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\n\t\t\t\tif (!activated) {\n\t\t\t\t\tthis.add('-ability', pokemon, 'Shock Factor', 'boost');\n\t\t\t\t\tactivated = true;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['substitute']) {\n\t\t\t\t\tthis.add('-immune', target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({ atk: -1 }, target, pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (move.flags['contact'] && this.randomChance(3, 10)) {\n\t\t\t\tsource.trySetStatus('par', target);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Shock Factor\",\n\t\trating: 3,\n\t},\n\tshellshock: {\n\t\tshortDesc: \"Effects of Rock Head. Moves with Recoil have a 30% chance of inflicting paralysis.\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'recoil') {\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tif (!move || !(move.recoil || move.hasCrashDamage) || move.target === 'self') return;\n\t\t\t(move.secondaries ||= []).push({\n\t\t\t\tchance: 30,\n\t\t\t\tstatus: 'par',\n\t\t\t\tability: this.dex.abilities.get('shellshock'),\n\t\t\t});\n\t\t},\n\t\tflags: {},\n\t\tname: \"Shell Shock\",\n\t\trating: 3,\n\t},\n\tcircuitbreaker: {\n\t\tshortDesc: \"Quark Drive + Mold Breaker\",\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t\tif (!this.field.isTerrain('electricterrain')) {\n\t\t\t\tthis.add('-ability', pokemon, 'Circuit Breaker');\n\t\t\t\tthis.add('-message', `${pokemon.name} breaks the circuit!`);\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreAbility = true;\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('circuitbreaker');\n\t\t\t} else if (!pokemon.volatiles['circuitbreaker']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('circuitbreaker');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['circuitbreaker'];\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\n\t\t},\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect?.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Circuit Breaker', '[fromitem]');\n\t\t\t\t\tthis.add('-message', `${pokemon.name} used its Booster Energy to overclock its Circuit Breaker!`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Circuit Breaker');\n\t\t\t\t\tthis.add('-message', `The Electric Terrain lets ${pokemon.name} overclock its Circuit Breaker!`);\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Circuit Breaker atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Circuit Breaker def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Circuit Breaker spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Circuit Breaker spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.debug('Circuit Breaker spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\n\t\t\t},\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Circuit Breaker\",\n\t\trating: 3,\n\t},\n\tweightoflife: {\n\t\tshortDesc: \"Heavy Metal + Protosynthesis. Protosynthesis activates if the user is heavier.\",\n\t\tonModifyWeightPriority: 1,\n\t\tonModifyWeight(weighthg) {\n\t\t\treturn weighthg * 2;\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonWeatherChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\n\t\t\tif (this.field.isWeather('sunnyday')) {\n\t\t\t\tpokemon.addVolatile('weightoflife');\n\t\t\t} else if (!pokemon.volatiles['weightoflife']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('weightoflife');\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (!(pokemon.volatiles['weightoflife']?.fromBooster ||\n\t\t\t\tpokemon.volatiles['weightoflife']?.fromWeightDiff) && !this.field.isWeather('sunnyday')) {\n\t\t\t\tpokemon.removeVolatile('weightoflife');\n\t\t\t}\n\t\t},\n\t\tonAnyPrepareHit(source, target, move) {\n\t\t\tif (move.hasBounced || source === target) return;\n\t\t\tconst user = this.effectState.target;\n\t\t\tif (user.volatiles['weightoflife'] && !user.volatiles['weightoflife'].fromWeightDiff) return;\n\t\t\tlet yourweight;\n\t\t\tif (source === user) {\n\t\t\t\tyourweight = target.getWeight();\n\t\t\t} else if (target === user) {\n\t\t\t\tyourweight = source.getWeight();\n\t\t\t} else return;\n\t\t\tif (user.getWeight() > yourweight) {\n\t\t\t\tif (user.volatiles['weightoflife']) return;\n\t\t\t\tuser.addVolatile('weightoflife');\n\t\t\t\tuser.volatiles['weightoflife'].fromWeightDiff = true;\n\t\t\t} else if (user.volatiles['weightoflife']) {\n\t\t\t\tif (this.field.isWeather('sunnyday')) {\n\t\t\t\t\tuser.volatiles['weightoflife'].fromWeightDiff = false;\n\t\t\t\t} else {\n\t\t\t\t\tuser.removeVolatile('weightoflife');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['weightoflife'];\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\n\t\t},\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect?.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Weight of Life', '[fromitem]');\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Weight of Life');\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Weight of Life atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Weight of Life def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Weight of Life spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Weight of Life spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.debug('Weight of Life spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\n\t\t\t},\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Weight of Life\",\n\t\trating: 1,\n\t\tnum: 135,\n\t},\n\trebelsblade: {\n\t\tshortDesc: \"This Pokemon's slicing moves have x1.5 power and a 30% chance to inflict poisoning.\",\n\t\tonBasePowerPriority: 19,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.flags['slicing']) {\n\t\t\t\tthis.debug('Rebels Blade boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonSourceDamagingHit(damage, target, source, move) {\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\n\t\t\tif (move.flags['slicing']) {\n\t\t\t\tif (this.randomChance(3, 10)) {\n\t\t\t\t\ttarget.trySetStatus('psn', source);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Rebel's Blade\",\n\t\trating: 3,\n\t},\n\tnaturalpressures: {\n\t\tshortDesc: \"Natural Cure + Pressure\",\n\t\tonCheckShow(pokemon) {\n\t\t\t// This is complicated\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Pressures activated,\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\n\t\t\t// that could have Natural Pressures switch out, but only some of them get cured.\n\t\t\tif (pokemon.side.active.length === 1 || pokemon.showCure === true || pokemon.showCure === false) return;\n\n\t\t\tconst cureList = [];\n\t\t\tlet noCureCount = 0;\n\t\t\tfor (const curPoke of pokemon.side.active) {\n\t\t\t\t// pokemon not statused\n\t\t\t\tif (!curPoke || !curPoke.status) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (curPoke.showCure) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Natural Pressures already known\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst species = curPoke.species;\n\t\t\t\t// pokemon can't get Natural Pressures\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') &&\n\t\t\t\t\t!Object.values(species.abilities).includes('Natural Pressures') &&\n\t\t\t\t\t!Object.values(species.abilities).includes('Rejuvenate')) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Natural Pressures\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// pokemon's ability is known to be Natural Pressures\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// pokemon isn't switching this turn\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (curPoke.hasAbility(['naturalpressures', 'naturalcure', 'rejuvenate'])) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Pressures (and is)\");\n\t\t\t\t\tcureList.push(curPoke);\n\t\t\t\t} else {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Pressures (but isn't)\");\n\t\t\t\t\tnoCureCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!cureList.length || !noCureCount) {\n\t\t\t\t// It's possible to know what pokemon were cured\n\t\t\t\tfor (const pkmn of cureList) {\n\t\t\t\t\tpkmn.showCure = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// It's not possible to know what pokemon were cured\n\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\n\t\t\t\tthis.add('-message', `(${cureList.length} of ${pokemon.side.name}'s pokemon ${cureList.length === 1 ? \"was\" : \"were\"} cured by Natural Cure.)`);\n\n\t\t\t\tfor (const pkmn of cureList) {\n\t\t\t\t\tpkmn.showCure = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tif (!pokemon.status) return;\n\n\t\t\t// if pokemon.showCure is undefined, it was skipped because its ability\n\t\t\t// is known\n\t\t\tif (pokemon.showCure === undefined) pokemon.showCure = true;\n\n\t\t\tif (pokemon.showCure) this.add('-curestatus', pokemon, pokemon.status, '[from] ability: Natural Pressures');\n\t\t\tpokemon.setStatus('');\n\n\t\t\t// only reset .showCure if it's false\n\t\t\t// (once you know a Pokemon has Natural Pressures, its cures are always known)\n\t\t\tpokemon.showCure ||= undefined;\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Natural Pressures');\n\t\t},\n\t\tonDeductPP(target, source) {\n\t\t\tif (target.side === source.side) return;\n\t\t\treturn 1;\n\t\t},\n\t\tflags: {},\n\t\tname: \"Natural Pressures\",\n\t\trating: 3,\n\t},\n\tvitalmetalbody: {\n\t\tshortDesc: \"Vital Spirit + Full Metal Body\",\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.status === 'slp') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Vital Metal Body');\n\t\t\t\tpokemon.cureStatus();\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif (status.id !== 'slp') return;\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vital Metal Body');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\tlet showMsg = false;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tdelete boost[i];\n\t\t\t\t\tshowMsg = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Vital Metal Body\", `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tonTryAddVolatile(status, target) {\n\t\t\tif (status.id === 'yawn') {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Vital Metal Body');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Vital Metal Body\",\n\t\trating: 3,\n\t},\n\tfortunomorphosis: {\n\t\tshortDesc: \"This Pokemon gains the Laser Focus effect when it takes a hit from an attack.\",\n\t\tonDamagingHitOrder: 1,\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\ttarget.addVolatile('laserfocus');\n\t\t},\n\t\tflags: {},\n\t\tname: \"Fortunomorphosis\",\n\t\trating: 3,\n\t},\n\tburningpetals: {\n\t\tshortDesc: \"Allied Fire-types status/stat drop/Fire immune; Gains x1.5 to Fire on activation.\",\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Fire' && target.hasType('Fire')) {\n\t\t\t\tmove.accuracy = true;\n\t\t\t\tif (!target.addVolatile('burningpetals')) {\n\t\t\t\t\tthis.add('-block', target, 'ability: Burning Petals', `[of] ${target}`);\n\t\t\t\t\tthis.add('-message', `${target.name} is surrounded by burning petals!`);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (!target.isAlly(source) && move.type === 'Fire' && target.hasType('Fire')) {\n\t\t\t\tmove.accuracy = true;\n\t\t\t\tconst effectHolder = this.effectState.target;\n\t\t\t\tif (!effectHolder.addVolatile('burningpetals')) {\n\t\t\t\t\tthis.add('-block', target, 'ability: Burning Petals', `[of] ${effectHolder}`);\n\t\t\t\t\tthis.add('-message', `${target.name} is surrounded by burning petals!`);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllyTryBoost(boost, target, source, effect) {\n\t\t\tif ((source && target === source) || !target.hasType('Fire')) return;\n\t\t\tlet showMsg = false;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tdelete boost[i];\n\t\t\t\t\tshowMsg = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries) {\n\t\t\t\tconst effectHolder = this.effectState.target;\n\t\t\t\tif (!effectHolder.addVolatile('burningpetals')) {\n\t\t\t\t\tthis.add('-block', target, 'ability: Burning Petals', `[of] ${effectHolder}`);\n\t\t\t\t\tthis.add('-message', `${target.name} is surrounded by burning petals!`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonAllySetStatus(status, target, source, effect) {\n\t\t\tif (source && target !== source && effect && effect.id !== 'yawn' && target.hasType('Fire')) {\n\t\t\t\tthis.debug('interrupting setStatus with Burning Petals');\n\t\t\t\tif (effect.name === 'Synchronize' || (effect.effectType === 'Move' && !effect.secondaries)) {\n\t\t\t\t\tconst effectHolder = this.effectState.target;\n\t\t\t\t\tif (!effectHolder.addVolatile('burningpetals')) {\n\t\t\t\t\t\tthis.add('-block', target, 'ability: Burning Petals', `[of] ${effectHolder}`);\n\t\t\t\t\t\tthis.add('-message', `${target.name} is surrounded by burning petals!`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllyTryAddVolatile(status, target) {\n\t\t\tif (status.id === 'yawn' && target.hasType('Fire')) {\n\t\t\t\tthis.debug('Burning Petals blocking yawn');\n\t\t\t\tconst effectHolder = this.effectState.target;\n\t\t\t\tif (!effectHolder.addVolatile('burningpetals')) {\n\t\t\t\t\tthis.add('-block', target, 'ability: Burning Petals', `[of] ${effectHolder}`);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tpokemon.removeVolatile('burningpetals');\n\t\t},\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(target) {\n\t\t\t\tthis.add('-ability', target, target.getAbility().name);\n\t\t\t\tthis.add('-start', target, 'Flash Fire', '[silent]');\n\t\t\t\tthis.add('-message', `The power of ${target.name}'s Fire-type moves rose!`);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility(['burningpetals', 'suppressivefire'])) {\n\t\t\t\t\tthis.debug('Burning Petals boost');\n\t\t\t\t\treturn this.chainModify(1.5);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\t\tif (move.type === 'Fire' && attacker.hasAbility(['burningpetals', 'suppressivefire'])) {\n\t\t\t\t\tthis.debug('Burning Petals boost');\n\t\t\t\t\treturn this.chainModify(1.5);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd(target) {\n\t\t\t\tthis.add('-end', target, 'Flash Fire', '[silent]');\n\t\t\t},\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Burning Petals\",\n\t\trating: 3,\n\t},\n\tsnowblind: {\n\t\tshortDesc: \"Snow Warning + Unseen Fist\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('snowscape');\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tif (move.flags['contact']) delete move.flags['protect'];\n\t\t},\n\t\tflags: {},\n\t\tname: \"Snowblind\",\n\t\trating: 3,\n\t},\n\tunvital: {\n\t\tshortDesc: \"Unaware + Vital Spirit\",\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon) {\n\t\t\t\tif (pokemon !== this.activeTarget) return;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t} else if (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.status === 'slp') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Unvital');\n\t\t\t\tpokemon.cureStatus();\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif (status.id !== 'slp') return;\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Unvital');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonTryAddVolatile(status, target) {\n\t\t\tif (status.id === 'yawn') {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Unvital');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Unvital\",\n\t\trating: 3,\n\t},\n\townluck: {\n\t\tshortDesc: \"This Pokemon has +1 crit ratio and is immune to Intimidate and derivatives thereof.\",\n\t\tonModifyCritRatio(critRatio) {\n\t\t\treturn critRatio + 1;\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif ([\n\t\t\t\t'Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude',\n\t\t\t].includes(effect.name) && boost.atk) {\n\t\t\t\tdelete boost.atk;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Own Luck', `[of] ${target}`);\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Own Luck', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Own Luck\",\n\t\trating: 3,\n\t},\n\tarmourlock: {\n\t\tshortDesc: \"This Pokemon can neither be critted nor have its item removed.\",\n\t\tonTakeItem(item, pokemon, source) {\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\tif (!pokemon.hp || pokemon.item === 'stickybarb') return;\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Armour Lock');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonCriticalHit: false,\n\t\tflags: { breakable: 1 },\n\t\tname: \"Armour Lock\",\n\t\trating: 3,\n\t},\n\tglacialfocus: {\n\t\tshortDesc: \"This Pokemon can't be flinched or have its Evasion lowered.\",\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\tif (boost.evasion && boost.evasion < 0) {\n\t\t\t\tdelete boost.evasion;\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Glacial Focus\", `[of] ${target}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonTryAddVolatile(status, pokemon) {\n\t\t\tif (status.id === 'flinch') return null;\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Glacial Focus\",\n\t\trating: 3,\n\t},\n\tslushie: {\n\t\tshortDesc: \"Mold Breaker + Slush Rush\",\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Slushie');\n\t\t\tthis.add('-message', `${pokemon.name} is drinking a slushie!`);\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreAbility = true;\n\t\t},\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (['hail', 'snowscape'].includes(pokemon.effectiveWeather())) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Slushie\",\n\t\trating: 3,\n\t},\n\tsandwrath: {\n\t\tshortDesc: \"Sand Stream + Sheer Force\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('sandstorm');\n\t\t},\n\t\tonModifyMove(move, pokemon) {\n\t\t\tif (move.secondaries) {\n\t\t\t\tdelete move.secondaries;\n\t\t\t\t// Technically not a secondary effect, but it is negated\n\t\t\t\tdelete move.self;\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\n\t\t\t\tmove.hasSheerForce = true;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 21,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Sand Wrath\",\n\t\trating: 3,\n\t},\n\tpondweed: {\n\t\tshortDesc: \"Grass/Water immunity, +1 Attack if hit by either\",\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && ['Grass', 'Water'].includes(move.type)) {\n\t\t\t\tif (!this.boost({ atk: 1 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Pondweed');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (source === this.effectState.target || !target.isAlly(source)) return;\n\t\t\tif (move.type === 'Grass' || move.type === 'Water') {\n\t\t\t\tthis.boost({ atk: 1 }, this.effectState.target);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Pondweed\",\n\t\trating: 3,\n\t},\n\twetskin: {\n\t\tshortDesc: \"Hydration + Torrent\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Wet Skin boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Wet Skin boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonResidualOrder: 5,\n\t\tonResidualSubOrder: 4,\n\t\tonResidual(pokemon) {\n\t\t\tif (pokemon.status && ['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\n\t\t\t\tthis.debug('wetskin');\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Wet Skin');\n\t\t\t\tpokemon.cureStatus();\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Wet Skin\",\n\t\trating: 3,\n\t},\n\tfriskexchange: {\n\t\tshortDesc: \"Frisk + Thermal Exchange\",\n\t\tonStart(pokemon) {\n\t\t\tfor (const target of pokemon.side.foe.active) {\n\t\t\t\tif (!target || target.fainted || !target.item) continue;\n\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Frisk Exchange', `[of] ${pokemon}`);\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (move.type === 'Fire') {\n\t\t\t\tthis.boost({ atk: 1 });\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.status === 'brn') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Frisk Exchange');\n\t\t\t\tpokemon.cureStatus();\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif (status.id !== 'brn') return;\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Frisk Exchange');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Frisk Exchange\",\n\t\trating: 3,\n\t},\n\tfreeflight: {\n\t\tshortDesc: \"Libero + Levitate\",\n\t\tonPrepareHit(source, target, move) {\n\t\t\tif (this.effectState.libero) return;\n\t\t\tif (move.hasBounced || move.flags['futuremove'] || move.sourceEffect === 'snatch' || move.callsMove) return;\n\t\t\tconst type = move.type;\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type && source.setType(type)) {\n\t\t\t\tthis.effectState.libero = true;\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Free Flight');\n\t\t\t}\n\t\t},\n\t\tonSwitchIn() {\n\t\t\tdelete this.effectState.libero;\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Free Flight\",\n\t\trating: 3,\n\t},\n\tpillage: {\n\t\tname: \"Pillage\",\n\t\tshortDesc: \"On switch-in, swaps ability with the opponent.\",\n\t\tonSwitchIn(pokemon) {\n\t\t\tthis.effectState.switchingIn = true;\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tif (pokemon.foes().some(\n\t\t\t\tfoeActive => foeActive && foeActive.isAdjacent(pokemon) && foeActive.ability === 'noability'\n\t\t\t) || pokemon.species.id !== 'zoinkazenta') {\n\t\t\t\tthis.effectState.gaveUp = true;\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp || !this.effectState.switchingIn) return;\n\t\t\tconst possibleTargets = pokemon.foes().filter(foeActive => foeActive && !foeActive.getAbility().flags['notrace'] &&\n\t\t\t\t!foeActive.getAbility().flags['failskillswap'] && foeActive.isAdjacent(pokemon));\n\t\t\tif (!possibleTargets.length) return;\n\t\t\tconst rand = (possibleTargets.length > 1) ? this.random(possibleTargets.length) : 0;\n\t\t\tconst target = possibleTargets[rand];\n\t\t\tconst pillageAbil = pokemon.getAbility();\n\t\t\tconst ability = target.getAbility();\n\t\t\tif (!this.runEvent('SetAbility', target, pokemon, this.effect, pillageAbil) ||\n\t\t\t\t!this.runEvent('SetAbility', pokemon, pokemon, this.effect, ability)) return;\n\t\t\tthis.add('-ability', pokemon, 'Pillage');\n\t\t\tthis.add('-activate', pokemon, 'move: Skill Swap', ability, pillageAbil, `[of] ${target}`);\n\t\t\tthis.singleEvent('End', pillageAbil, pokemon.abilityState, pokemon);\n\t\t\tthis.singleEvent('End', ability, target.abilityState, target);\n\t\t\tpokemon.ability = ability.id;\n\t\t\tpokemon.abilityState = { id: this.toID(pokemon.ability), effectOrder: 0, target: pokemon };\n\t\t\ttarget.ability = pillageAbil.id;\n\t\t\ttarget.abilityState = { id: this.toID(pillageAbil.id), effectOrder: 0, target };\n\t\t\tthis.singleEvent('Start', ability, pokemon.abilityState, pokemon);\n\t\t\tthis.singleEvent('Start', pillageAbil, target.abilityState, target);\n\t\t},\n\t\tflags: { failroleplay: 1, noentrain: 1, notrace: 1 },\n\t\trating: 5,\n\t},\n\tfatfingers: {\n\t\tshortDesc: \"Long Reach + Thick Fat\",\n\t\tonModifyMove(move) {\n\t\t\tdelete move.flags['contact'];\n\t\t},\n\t\tonSourceModifyAtkPriority: 6,\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\n\t\t\t\tthis.debug('Fat Fingers weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifySpAPriority: 5,\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\n\t\t\t\tthis.debug('Fat Fingers weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Fat Fingers\",\n\t\trating: 3,\n\t},\n\thourglass: {\n\t\tshortDesc: \"Mirror Armor + Sand Rush\",\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (this.field.isWeather('sandstorm')) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (type === 'sandstorm') return false;\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\t// Don't bounce self stat changes, or boosts that have already bounced\n\t\t\tif (!source || target === source || !boost || effect.name === 'Hourglass') return;\n\t\t\tlet b: BoostID;\n\t\t\tfor (b in boost) {\n\t\t\t\tif (boost[b]! < 0 && target.boosts[b] > -6) {\n\t\t\t\t\tconst negativeBoost: SparseBoostsTable = {};\n\t\t\t\t\tnegativeBoost[b] = boost[b];\n\t\t\t\t\tdelete boost[b];\n\t\t\t\t\tif (source.hp) {\n\t\t\t\t\t\tthis.add('-ability', target, 'Hourglass');\n\t\t\t\t\t\tthis.boost(negativeBoost, source, target, null, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Hourglass\",\n\t\trating: 3,\n\t},\n\tpiezoelectric: {\n\t\tshortDesc: \"Volt Absorb + Pressure\",\n\t\tonDeductPP(target, source) {\n\t\t\tif (!target.isAlly(source)) return 1;\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Piezoelectric');\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Electric' && !move.ignoreAbility) {\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Piezoelectric');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Piezoelectric\",\n\t\trating: 3,\n\t},\n\tfieldday: {\n\t\tshortDesc: \"If Grassy Terrain is active, this Pokemon's Speed is doubled.\",\n\t\tonModifySpe(spe) {\n\t\t\tif (this.field.isTerrain('grassyterrain')) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Field Day\",\n\t\trating: 3,\n\t},\n\tforceofnature: {\n\t\tshortDesc: \"Grassy Surge + Sheer Force.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setTerrain('grassyterrain');\n\t\t},\n\t\tonModifyMove(move, pokemon) {\n\t\t\tif (move.secondaries) {\n\t\t\t\tdelete move.secondaries;\n\t\t\t\t// Technically not a secondary effect, but it is negated\n\t\t\t\tdelete move.self;\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\n\t\t\t\tmove.hasSheerForce = true;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 21,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Force of Nature\",\n\t},\n\tairbornearmor: {\n\t\tshortDesc: \"Prism Armor + Levitate\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\n\t\t\t\tthis.debug('Airborne Armor neutralize');\n\t\t\t\treturn this.chainModify(0.75);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Airborne Armor\",\n\t\trating: 3,\n\t},\n\tbleedingedge: {\n\t\tshortDesc: \"Mold Breaker + Technician\",\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Bleeding Edge');\n\t\t\tthis.add('-message', `${pokemon.name} breaks the mold!`);\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreAbility = true;\n\t\t},\n\t\tonBasePowerPriority: 30,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\n\t\t\tthis.debug(`Base Power: ${basePowerAfterMultiplier}`);\n\t\t\tif (basePowerAfterMultiplier <= 60) {\n\t\t\t\tthis.debug('Bleeding Edge boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Bleeding Edge\",\n\t\trating: 3,\n\t},\n\tancientmarble: {\n\t\tshortDesc: \"Protosynthesis + Sharpness\",\n\t\tonBasePowerPriority: 19,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.flags['slicing']) {\n\t\t\t\tthis.debug('Ancient Marble boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonWeatherChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\n\t\t\tif (this.field.isWeather('sunnyday')) {\n\t\t\t\tpokemon.addVolatile('protosynthesis');\n\t\t\t} else if (!pokemon.volatiles['protosynthesis']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('protosynthesis');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['protosynthesis'];\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Ancient Marble\",\n\t\trating: 3,\n\t},\n\tspongeofruin: {\n\t\tshortDesc: \"Beads of Ruin + Water Absorb\",\n\t\tonStart(pokemon) {\n\t\t\tif (this.suppressingAbility(pokemon)) return;\n\t\t\tthis.add('-ability', pokemon, 'Sponge of Ruin');\n\t\t\tthis.add('-message', `${pokemon.name}'s Sponge of Ruin weakened the Sp. Def of all surrounding Pok\u00E9mon!`);\n\t\t},\n\t\tonAnyModifySpD(spd, target, source, move) {\n\t\t\tif (target.hasAbility(['Sponge of Ruin', 'Beads of Ruin'])) return;\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (!move.ruinedSpD?.hasAbility(['Sponge of Ruin', 'Beads of Ruin'])) move.ruinedSpD = abilityHolder;\n\t\t\telse if (move.ruinedSpD !== abilityHolder) return;\n\t\t\tthis.debug('Sponge of Ruin SpD drop');\n\t\t\treturn this.chainModify(0.75);\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Water') {\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Sponge of Ruin');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Sponge of Ruin\",\n\t\trating: 3,\n\t},\n\toverwhelming: {\n\t\tshortDesc: \"Magic Guard + Sheer Force\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.effectType !== 'Move') {\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move, pokemon) {\n\t\t\tif (move.secondaries) {\n\t\t\t\tdelete move.secondaries;\n\t\t\t\t// Technically not a secondary effect, but it is negated\n\t\t\t\tdelete move.self;\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\n\t\t\t\tmove.hasSheerForce = true;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 21,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Overwhelming\",\n\t\trating: 3,\n\t},\n\tprehistorichunter: {\n\t\tshortDesc: \"Protosynthesis + Gulp Missile; Activating one also activates the other\",\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('WeatherChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (!source.hp || !source.isActive || target.transformed || target.isSemiInvulnerable()) return;\n\t\t\tif (['screamcormorantgulping', 'screamcormorantgorging'].includes(target.species.id)) {\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\n\t\t\t\tif (target.species.id === 'screamcormorantgulping') {\n\t\t\t\t\tthis.boost({ def: -1 }, source, target, null, true);\n\t\t\t\t} else {\n\t\t\t\t\tsource.trySetStatus('par', target, move);\n\t\t\t\t}\n\t\t\t\ttarget.formeChange('screamcormorant', move);\n\t\t\t\tdelete target.volatiles['prehistorichunter'];\n\t\t\t}\n\t\t},\n\t\t// The Dive part of this mechanic is implemented in Dive's `onTryMove` in moves.ts\n\t\tonSourceTryPrimaryHit(target, source, effect) {\n\t\t\tif (\n\t\t\t\teffect?.id === 'surf' && source.hasAbility('prehistorichunter') &&\n\t\t\t\tsource.species.name === 'Scream Cormorant' && !source.transformed\n\t\t\t) {\n\t\t\t\tconst forme = source.hp <= source.maxhp / 2 ? 'screamcormorantgorging' : 'screamcormorantgulping';\n\t\t\t\tsource.formeChange(forme, effect);\n\t\t\t\tsource.addVolatile('prehistorichunter');\n\t\t\t}\n\t\t},\n\t\tonWeatherChange(pokemon) {\n\t\t\t// if (pokemon.transformed) return;\n\t\t\tconst forme = pokemon.hp <= pokemon.maxhp / 2 ? 'screamcormorantgorging' : 'screamcormorantgulping';\n\t\t\t// Protosynthesis is not affected by Utility Umbrella\n\t\t\tif (this.field.isWeather('sunnyday')) {\n\t\t\t\tpokemon.addVolatile('prehistorichunter');\n\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\n\t\t\t} else if (!pokemon.volatiles['prehistorichunter']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('prehistorichunter');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['prehistorichunter'];\n\t\t\tthis.add('-end', pokemon, 'Protosynthesis', '[silent]');\n\t\t},\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tconst forme = pokemon.hp <= pokemon.maxhp / 2 ? 'screamcormorantgorging' : 'screamcormorantgulping';\n\t\t\t\tif (effect?.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Prehistoric Hunter', '[fromitem]');\n\t\t\t\t\tif (pokemon.species.id === 'screamcormorant') {\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} used its Booster Energy to locate nearby prey!`);\n\t\t\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Prehistoric Hunter');\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Prehistoric Hunter atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Prehistoric Hunter def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Prehistoric Hunter spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Prehistoric Hunter spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.debug('Prehistoric Hunter spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\n\t\t\t},\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1, notransform: 1 },\n\t\tname: \"Prehistoric Hunter\",\n\t\trating: 3,\n\t},\n\tlawnmowerofruin: {\n\t\tshortDesc: \"Sap Sipper + Vessel of Ruin\",\n\t\tonStart(pokemon) {\n\t\t\tif (this.suppressingAbility(pokemon)) return;\n\t\t\tthis.add('-ability', pokemon, 'Lawnmower of Ruin');\n\t\t\tthis.add('-message', `${pokemon.name}'s Lawnmower of Ruin weakened the Sp. Atk of all surrounding Pok\u00E9mon!`);\n\t\t},\n\t\tonAnyModifySpA(spa, source, target, move) {\n\t\t\tif (source.hasAbility(['Lawnmower of Ruin', 'Vessel of Ruin'])) return;\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (!move.ruinedSpA) move.ruinedSpA = abilityHolder;\n\t\t\telse if (move.ruinedSpA !== abilityHolder) return;\n\t\t\tthis.debug('Lawnmower of Ruin SpA drop');\n\t\t\treturn this.chainModify(0.75);\n\t\t},\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Grass') {\n\t\t\t\tif (!this.boost({ atk: 1 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Lawnmower of Ruin');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (source === this.effectState.target || !target.isAlly(source) || move.type !== 'Grass') return;\n\t\t\tthis.boost({ atk: 1 }, this.effectState.target);\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Lawnmower of Ruin\",\n\t},\n\tbarbedchain: {\n\t\tshortDesc: \"This Pokemon\u2019s contact moves do an additional 1/8 of the target\u2019s max HP in damage.\",\n\t\tonSourceDamagingHit(damage, target, source, move) {\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Toxic Chain's effect\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\n\t\t\tif (this.checkMoveMakesContact(move, target, source)) {\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, source);\n\t\t\t}\n\t\t},\n\t\tname: \"Barbed Chain\",\n\t},\n\tsteamyscales: {\n\t\tshortDesc: \"Multiscale effects. Damage from Water and Fire is halved.\",\n\t\tonSourceBasePowerPriority: 17,\n\t\tonSourceBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire' || move.type === 'Water') {\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (target.hp >= target.maxhp) {\n\t\t\t\tthis.debug('Steamy Scales weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Steamy Scales\",\n\t},\n\tmarvelsteam: {\n\t\tshortDesc: \"When hit by a damaging Water or Fire-type move, +6 to Def and Spe.\",\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (['Water', 'Fire'].includes(move.type)) {\n\t\t\t\tthis.boost({ def: 6, spe: 6 });\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Marvel Steam\",\n\t},\n\thellkite: {\n\t\tshortDesc: \"Levitate effects + 1.5x power to Dragon and Ground moves.\",\n\t\t// floatation under scripts.ts\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (['Dragon', 'Ground'].includes(move.type)) {\n\t\t\t\tthis.debug('Hellkite boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (['Dragon', 'Ground'].includes(move.type)) {\n\t\t\t\tthis.debug('Hellkite boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Hellkite\",\n\t},\n\tfeistytempo: {\n\t\tshortDesc: \"Guts + Own Tempo\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (attacker.status) {\n\t\t\t\t// Burn attack cut being ignored is in scripts.ts/actions\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.volatiles['confusion']) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Feisty Tempo');\n\t\t\t\tpokemon.removeVolatile('confusion');\n\t\t\t}\n\t\t},\n\t\tonTryAddVolatile(status, pokemon) {\n\t\t\tif (status.id === 'confusion') return null;\n\t\t},\n\t\tonHit(target, source, move) {\n\t\t\tif (move?.volatileStatus === 'confusion') {\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Feisty Tempo');\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif ([\n\t\t\t\t'Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude',\n\t\t\t].includes(effect.name) && boost.atk) {\n\t\t\t\tdelete boost.atk;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Feisty Tempo', `[of] ${target}`);\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Feisty Tempo', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Feisty Tempo\",\n\t},\n\twellbakedflameorb: {\n\t\tshortDesc: \"Guts + Well-Baked Body\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (attacker.status) {\n\t\t\t\t// Burn attack cut being ignored is in scripts.ts/actions\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Fire') {\n\t\t\t\tif (!this.boost({ def: 2 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Well-Baked Flame Orb');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Well-Baked Flame Orb\",\n\t},\n\tadrenalinearoma: {\n\t\tshortDesc: \"Guts + Aroma Veil\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (attacker.status) {\n\t\t\t\t// Burn attack cut being ignored is in scripts.ts/actions\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonAllyTryAddVolatile(status, target, source, effect) {\n\t\t\tif (['attract', 'disable', 'encore', 'healblock', 'taunt', 'torment'].includes(status.id)) {\n\t\t\t\tif (effect.effectType === 'Move') {\n\t\t\t\t\tconst effectHolder = this.effectState.target;\n\t\t\t\t\tthis.add('-block', target, 'ability: Adrenaline Aroma', `[of] ${effectHolder}`);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Adrenaline Aroma\",\n\t},\n\tpowerbuns: {\n\t\tshortDesc: \"Sheer Force + Well-Baked Body\",\n\t\tonModifyMove(move, pokemon) {\n\t\t\tif (move.secondaries) {\n\t\t\t\tdelete move.secondaries;\n\t\t\t\t// Technically not a secondary effect, but it is negated\n\t\t\t\tdelete move.self;\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\n\t\t\t\tmove.hasSheerForce = true;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 21,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Fire') {\n\t\t\t\tif (!this.boost({ def: 2 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Power Buns');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Power Buns\",\n\t},\n\thoneymoon: {\n\t\tshortDesc: \"Levitate + Honey Gather\",\n\t\t// airborneness implemented in scripts.ts\n\t\tflags: { breakable: 1 },\n\t\tname: \"Honey Moon\",\n\t},\n\taircontrol: {\n\t\tshortDesc: \"Levitate + Mind's Eye\",\n\t\t// airborneness implemented in scripts.ts\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\n\t\t\t\tdelete boost.accuracy;\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Air Control\", `[of] ${target}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonModifyMovePriority: -5,\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreEvasion = true;\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Air Control\",\n\t},\n\tlivelylocks: {\n\t\tshortDesc: \"Copies opponent's stat changes to Speed on switch-in\",\n\t\tonStart(pokemon) {\n\t\t\t// Currently because Costar bypasses sub Lively Locks too will bypass sub\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\n\t\t\t\tif (!target.boosts.spe) continue;\n\t\t\t\tthis.boost({ spe: target.boosts.spe }, pokemon);\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Lively Locks\",\n\t},\n\tangrybird: {\n\t\tshortDesc: \"Defiant + Competitive\",\n\t\tonAfterEachBoost(boost, target, source, effect) {\n\t\t\tif (!source || target.isAlly(source)) return;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tthis.boost({ atk: 2, spa: 2 }, target, target, null, false, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Angry Bird\",\n\t},\n\tsharpgoggles: {\n\t\tshortDesc: \"Tinted Lens + Competitive\",\n\t\tonModifyDamage(damage, source, target, move) {\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\n\t\t\t\tthis.debug('Tinted Lens boost');\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tonAfterEachBoost(boost, target, source, effect) {\n\t\t\tif (!source || target.isAlly(source)) return;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tthis.boost({ spa: 2 }, target, target, null, false, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Sharp Goggles\",\n\t},\n\twinterstorm: {\n\t\tshortDesc: \"Under snow, heal 6.25% of own max HP and damage opponents for 12.5% of their max HP at end of turn.\",\n\t\tonWeather(target, source, effect) {\n\t\t\tif (effect.id === 'snowscape' || effect.id === 'hail') {\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\n\t\t\t\tfor (const pokemon of target.foes()) {\n\t\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, target);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (type === 'hail') return false;\n\t\t},\n\t\tflags: {},\n\t\tname: \"Winter Storm\",\n\t},\n\tfishythreat: {\n\t\tshortDesc: \"On switch-in, inflict -2 Speed to opponents.\",\n\t\tonStart(pokemon) {\n\t\t\tlet activated = false;\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\n\t\t\t\tif (!activated) {\n\t\t\t\t\tthis.add('-ability', pokemon, 'Fishy Threat', 'boost');\n\t\t\t\t\tactivated = true;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['substitute']) {\n\t\t\t\t\tthis.add('-immune', target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({ spe: -2 }, target, pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Fishy Threat\",\n\t\trating: 3.5,\n\t},\n\theatproofdrive: {\n\t\tshortDesc: \"Heatproof + Quark Drive\",\n\t\tonSourceModifyAtkPriority: 6,\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire') {\n\t\t\t\tthis.debug('Heatproof Drive Atk weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifySpAPriority: 5,\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire') {\n\t\t\t\tthis.debug('Heatproof Drive SpA weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect && effect.id === 'brn') {\n\t\t\t\treturn damage / 2;\n\t\t\t}\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('quarkdrive');\n\t\t\t} else if (!pokemon.volatiles['quarkdrive']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('quarkdrive');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['quarkdrive'];\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\n\t\t},\n\t\tflags: { breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Heatproof Drive\",\n\t\trating: 4,\n\t},\n\tfiredup: {\n\t\tshortDesc: \"Side protected from Fire and Priority moves; x1.5 power on priority.\",\n\t\tonFoeTryMove(target, source, move) {\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst armorTailHolder = this.effectState.target;\n\t\t\tif ((source.isAlly(armorTailHolder) || move.target === 'all') && (move.priority > 0.1 || move.type === 'Fire')) {\n\t\t\t\tthis.attrLastMove('[still]');\n\t\t\t\tthis.add('cant', armorTailHolder, 'ability: Fired Up', move, `[of] ${target}`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.priority > 0.1) {\n\t\t\t\tthis.debug('Fired Up boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.priority > 0.1) {\n\t\t\t\tthis.debug('Fired Up boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Fired Up\",\n\t},\n\tfiredrinker: {\n\t\tshortDesc: \"Sap Sipper + Blaze. Sap Sipper also activates against Fire-type moves.\",\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && ['Fire', 'Grass'].includes(move.type)) {\n\t\t\t\tif (!this.boost({ atk: 1 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Fire Drinker');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (source === this.effectState.target || !target.isAlly(source)) return;\n\t\t\tif (['Fire', 'Grass'].includes(move.type)) {\n\t\t\t\tthis.boost({ atk: 1 }, this.effectState.target);\n\t\t\t}\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Fire Drinker boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Fire Drinker boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Fire Drinker\",\n\t},\n\tminddomain: {\n\t\tshortDesc: \"When stats are lowered, +2 SpA and sets up Psychic Terrain.\",\n\t\tonAfterEachBoost(boost, target, source, effect) {\n\t\t\tif (!source || target.isAlly(source)) return;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tthis.boost({ spa: 2 }, target, target, null, false, true);\n\t\t\t\t\tthis.field.setTerrain('psychicterrain');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Mind Domain\",\n\t\trating: 4,\n\t},\n\tforcedfencer: {\n\t\tshortDesc: \"Pressure + Stance Change\",\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Forced Fencer');\n\t\t},\n\t\tonDeductPP(target, source) {\n\t\t\tif (target.isAlly(source)) return;\n\t\t\treturn 1;\n\t\t},\n\t\tonModifyMovePriority: 1,\n\t\tonModifyMove(move, attacker, defender) {\n\t\t\tif (attacker.species.baseSpecies !== 'Deoxyslash-Speed' || attacker.transformed) return;\n\t\t\tlet targetForme;\n\t\t\tif (move.id === 'kingsshield') {\n\t\t\t\ttargetForme = 'Deoxyslash-Speed';\n\t\t\t} else if (move.category !== 'Status') {\n\t\t\t\ttargetForme = 'Deoxyslash-Speed-Blade';\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1 },\n\t\tname: \"Forced Fencer\",\n\t\trating: 4,\n\t},\n\t// Introduced with FEUU\n\tstormclinic: {\n\t\tshortDesc: \"Regenerator + Wind Rider\",\n\t\tonStart(pokemon) {\n\t\t\tif (pokemon.side.sideConditions['tailwind']) {\n\t\t\t\tthis.boost({ atk: 1 }, pokemon, pokemon);\n\t\t\t}\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.flags['wind']) {\n\t\t\t\tif (!this.boost({ atk: 1 }, target, target)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Wind Rider');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAllySideConditionStart(target, source, sideCondition) {\n\t\t\tconst pokemon = this.effectState.target;\n\t\t\tif (sideCondition.id === 'tailwind') {\n\t\t\t\tthis.boost({ atk: 1 }, pokemon, pokemon);\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Storm Clinic\",\n\t},\n\tultraface: {\n\t\tshortDesc: \"Eisephalon: Change to No Face form on KO and gain +1 to highest stat; Reverts in Snow\",\n\t\tonSourceAfterFaint(length, target, source, effect) {\n\t\t\tif (effect && effect.effectType === 'Move' && source.species.id === 'eisephalon') {\n\t\t\t\tthis.boost({ [this.effectState.bestStat ||= source.getBestStat(true, true)]: length }, source);\n\t\t\t\tsource.formeChange('Eisephalon-No-Face', this.effect, true);\n\t\t\t}\n\t\t},\n\t\tonWeatherChange(pokemon, source, sourceEffect) {\n\t\t\t// snow/hail resuming because Cloud Nine/Air Lock ended does not trigger Ice Face\n\t\t\tif ((sourceEffect as Ability)?.suppressWeather || !pokemon.hp) return;\n\t\t\tif (this.field.isWeather(['hail', 'snowscape']) && pokemon.species.id === 'eisephalonnoface') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ultra Face');\n\t\t\t\tpokemon.formeChange('Eisephalon', this.effect, true);\n\t\t\t}\n\t\t},\n\t\tflags: {\n\t\t\tfailroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1,\n\t\t\tnotransform: 1,\n\t\t},\n\t\tname: \"Ultra Face\",\n\t\trating: 3.5,\n\t\tnum: 224,\n\t},\n\temperorsclothes: {\n\t\tshortDesc: \"Deal 10% bonus damage for each hit taken (up to 50%)\",\n\t\tonStart(pokemon) {\n\t\t\tif (!pokemon.hp) return;\n\t\t\tconst attacked = pokemon.timesAttacked;\n\t\t\tif (attacked > 0) {\n\t\t\t\tthis.effectState.fallen = attacked > 5 ? 5 : attacked;\n\t\t\t\tthis.add('-start', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\n\t\t\t} else {\n\t\t\t\tthis.effectState.fallen = 0;\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (!target.hp || this.effectState.fallen >= 5) return;\n\t\t\tif (!move.isMax && !move.flags['futuremove'] && move.id !== 'struggle') {\n\t\t\t\tif (this.effectState.fallen) {\n\t\t\t\t\tthis.add('-end', target, `fallen${this.effectState.fallen}`, '[silent]');\n\t\t\t\t}\n\t\t\t\tthis.effectState.fallen++;\n\t\t\t\tthis.add('-activate', target, 'ability: Emperor\\'s Clothes');\n\t\t\t\tthis.add('-start', target, `fallen${this.effectState.fallen}`, '[silent]');\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 21,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (this.effectState.fallen) {\n\t\t\t\tconst powMod = [4096, 4506, 4915, 5325, 5734, 6144];\n\t\t\t\tthis.debug(`Supreme Overlord boost: ${powMod[this.effectState.fallen]}/4096`);\n\t\t\t\treturn this.chainModify([powMod[this.effectState.fallen], 4096]);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Emperor's Clothes\",\n\t},\n\terratic: {\n\t\tshortDesc: \"+2 to a random stat (not Acc./Eva.) when any stat is lowered by a foe.\",\n\t\tonAfterEachBoost(boost, target, source, effect) {\n\t\t\tif (!source || target.isAlly(source)) return;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tconst stats: BoostID[] = [];\n\t\t\t\t\tlet statPlus: BoostID;\n\t\t\t\t\tfor (statPlus in target.boosts) {\n\t\t\t\t\t\tif (!['accuracy', 'evasion'].includes(statPlus) && target.boosts[statPlus] < 6) {\n\t\t\t\t\t\t\tstats.push(statPlus);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Don't boost if it's +6 across the board and the mon suffered a drop to Evasion or Accuracy\n\t\t\t\t\tif (stats.length) this.boost({ [this.sample(stats)]: 2 }, target, target, null, false, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Erratic\",\n\t},\n\tnononsense: {\n\t\tshortDesc: \"Battle Armor + Clear Body\",\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\tlet showMsg = false;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tdelete boost[i];\n\t\t\t\t\tshowMsg = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: No Nonsense\", `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tonCriticalHit: false,\n\t\tflags: { breakable: 1 },\n\t\tname: \"No Nonsense\",\n\t},\n\tsushistorm: {\n\t\tshortDesc: \"Sturdy + Storm Drain\",\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (target !== pokemon && move.type === 'Water') {\n\t\t\t\tif (!this.boost({ spa: 1 })) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Sushi Storm');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (move.ohko) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Sushi Storm');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagePriority: -30,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\n\t\t\t\tthis.add('-ability', target, 'Sushi Storm');\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tonAnyRedirectTarget(target, source, source2, move) {\n\t\t\tif (move.type !== 'Water' || move.flags['pledgecombo']) return;\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\n\t\t\t\tif (this.effectState.target !== target) {\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Sushi Storm');\n\t\t\t\t}\n\t\t\t\treturn this.effectState.target;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Sushi Storm\",\n\t},\n\tcommandingpull: {\n\t\tshortDesc: \"Opposing Steels and boosted are trapped\",\n\t\tonFoeTrapPokemon(pokemon) {\n\t\t\tif ((pokemon.positiveBoosts() || pokemon.hasType('Steel')) && pokemon.isAdjacent(this.effectState.target)) {\n\t\t\t\tpokemon.tryTrap(true);\n\t\t\t}\n\t\t},\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\n\t\t\tif (!(source ||= this.effectState.target) || !pokemon.isAdjacent(source)) return;\n\t\t\tif (!pokemon.knownType || pokemon.positiveBoosts() || pokemon.hasType('Steel')) {\n\t\t\t\tpokemon.maybeTrapped = true;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Commanding Pull\",\n\t},\n\tultrashackles: {\n\t\tshortDesc: \"Unburden effects. +1 Speed when landing a KO.\",\n\t\tonAfterUseItem(item, pokemon) {\n\t\t\tif (pokemon === this.effectState.target) pokemon.addVolatile('unburden');\n\t\t},\n\t\tonTakeItem(item, pokemon) {\n\t\t\tpokemon.addVolatile('unburden');\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tpokemon.removeVolatile('unburden');\n\t\t},\n\t\tonSourceAfterFaint(length, target, source, effect) {\n\t\t\tif (effect && effect.effectType === 'Move') {\n\t\t\t\tthis.boost({ spe: length }, source);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Ultra Shackles\",\n\t},\n\tdauntingstorm: {\n\t\tshortDesc: \"Water Absorb + Intimidate\",\n\t\tonStart(pokemon) {\n\t\t\tlet activated = false;\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\n\t\t\t\tif (!activated) {\n\t\t\t\t\tthis.add('-ability', pokemon, 'Daunting Storm', 'boost');\n\t\t\t\t\tactivated = true;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['substitute']) {\n\t\t\t\t\tthis.add('-immune', target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({ atk: -1 }, target, pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Water') {\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Daunting Storm');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Daunting Storm\",\n\t},\n\tmagnetize: {\n\t\tshortDesc: \"Galvanize + Levitate + x1.2 power to Ground.\",\n\t\t// levitate's airborneness in scripts.ts/pokemon#IsGrounded()\n\t\tonModifyTypePriority: -1,\n\t\tonModifyType(move, pokemon) {\n\t\t\tconst noModifyType = [\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t\t];\n\t\t\tif (move.type === 'Normal' && !(noModifyType.includes(move.id) ||\n\t\t\t\t(move.isZ && move.category !== 'Status') || (move.name === 'Tera Blast' && pokemon.terastallized))) {\n\t\t\t\tmove.type = 'Electric';\n\t\t\t\tmove.typeChangerBoosted = this.effect;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.typeChangerBoosted === this.effect || move.type === 'Ground') return this.chainModify([4915, 4096]);\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Magnetize\",\n\t},\n\tmagneticforce: {\n\t\tshortDesc: \"Galvanize effects + Traps Electric-types.\",\n\t\t// levitate's airborneness in scripts.ts/pokemon#IsGrounded()\n\t\tonFoeTrapPokemon(pokemon) {\n\t\t\tif (pokemon.hasType('Electric') && pokemon.isAdjacent(this.effectState.target)) {\n\t\t\t\tpokemon.tryTrap(true);\n\t\t\t}\n\t\t},\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\n\t\t\tif (!(source ||= this.effectState.target) || !pokemon.isAdjacent(source)) return;\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Electric')) {\n\t\t\t\tpokemon.maybeTrapped = true;\n\t\t\t}\n\t\t},\n\t\tonModifyTypePriority: -1,\n\t\tonModifyType(move, pokemon) {\n\t\t\tconst noModifyType = [\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t\t];\n\t\t\tif (move.type === 'Normal' && !(noModifyType.includes(move.id) ||\n\t\t\t\t(move.isZ && move.category !== 'Status') || (move.name === 'Tera Blast' && pokemon.terastallized))) {\n\t\t\t\tmove.type = 'Electric';\n\t\t\t\tmove.typeChangerBoosted = this.effect;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Magnetic Force\",\n\t},\n\thydrotechnic: {\n\t\tshortDesc: \"Moves with <=60BP have x1.5 power and restore 6.25% of Max HP after use.\",\n\t\tonBasePowerPriority: 30,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\n\t\t\tthis.debug(`Base Power: ${basePowerAfterMultiplier}`);\n\t\t\tif (basePowerAfterMultiplier <= 60) {\n\t\t\t\tthis.debug('Technician boost');\n\t\t\t\t// uhhh let's hope this typeChangerBoosted hack works\n\t\t\t\tmove.typeChangerBoosted = this.effect;\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonSourceDamagingHit(damage, target, source, move) {\n\t\t\tif (source && move.typeChangerBoosted === this.effect)\n\t\t\t\tthis.heal(source.baseMaxhp / 16, source, source);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Hydrotechnic\",\n\t},\n\tshearstrength: {\n\t\tshortDesc: \"Takes x0.75 damage from SE moves and moves with secondaries.\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (move.secondaries || target.getMoveHitData(move).typeMod > 0) {\n\t\t\t\tthis.debug('Shear Strength neutralize');\n\t\t\t\treturn this.chainModify(0.75);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Shear Strength\",\n\t},\n\tsuppressivefire: {\n\t\tshortDesc: \"Filter + Flash Fire\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\n\t\t\t\tthis.debug('Filter neutralize');\n\t\t\t\treturn this.chainModify(0.75);\n\t\t\t}\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Fire') {\n\t\t\t\tmove.accuracy = true;\n\t\t\t\tif (!target.addVolatile('burningpetals')) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Suppressive Fire');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tpokemon.removeVolatile('burningpetals');\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Suppressive Fire\",\n\t},\n\tinnovate: {\n\t\tshortDesc: \"Scrappy + Quark Drive.\",\n\t\tonModifyMovePriority: -5,\n\t\tonModifyMove(move) {\n\t\t\tif ((move.ignoreImmunity ||= {}) !== true) {\n\t\t\t\tmove.ignoreImmunity['Fighting'] = true;\n\t\t\t\tmove.ignoreImmunity['Normal'] = true;\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif ([\n\t\t\t\t'Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude',\n\t\t\t].includes(effect.name)) {\n\t\t\t\tif (boost.atk) {\n\t\t\t\t\tdelete boost.atk;\n\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Innovate', `[of] ${target}`);\n\t\t\t\t}\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Innovate', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.singleEvent('TerrainChange', this.effect, this.effectState, pokemon);\n\t\t},\n\t\tonTerrainChange(pokemon) {\n\t\t\tif (pokemon.transformed) return;\n\t\t\tif (this.field.isTerrain('electricterrain')) {\n\t\t\t\tpokemon.addVolatile('quarkdrive');\n\t\t\t} else if (!pokemon.volatiles['quarkdrive']?.fromBooster) {\n\t\t\t\tpokemon.removeVolatile('quarkdrive');\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tdelete pokemon.volatiles['quarkdrive'];\n\t\t\tthis.add('-end', pokemon, 'Quark Drive', '[silent]');\n\t\t},\n\t\tflags: { breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\n\t\tname: \"Innovate\",\n\t\trating: 4,\n\t},\n\tprehistoricpresence: {\n\t\tshortDesc: \"Unaware + Pressure\",\n\t\tonDeductPP(target, source) {\n\t\t\tif (!target.isAlly(source)) return 1;\n\t\t},\n\t\t// Mold Breaker doesn't hit through Pressure but it hits through Unaware\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Prehistoric Presence');\n\t\t\tpokemon.addVolatile('ability:unaware');\n\t\t},\n\t\tonSourcePrepareHit(source, target, move) {\n\t\t\tif (target.volatiles['ability:unaware']) {\n\t\t\t\tif (move.ignoreAbility) target.removeVolatile('ability:unaware');\n\t\t\t} else if (!move.ignoreAbility) target.addVolatile('ability:unaware');\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tpokemon.removeVolatile('ability:unaware');\n\t\t},\n\t\tflags: {},\n\t\tname: \"Prehistoric Presence\",\n\t\trating: 3,\n\t},\n\thotheaded: {\n\t\tshortDesc: \"Recoil immunity; x1.5 power to Recoil, Fire when below 1/3 HP\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'recoil') {\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\n\t\t\t}\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (attacker.hp <= attacker.maxhp / 3 && (move.type === 'Fire' || move.recoil)) {\n\t\t\t\tthis.debug('Hotheaded boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (attacker.hp <= attacker.maxhp / 3 && (move.type === 'Fire' || move.recoil)) {\n\t\t\t\tthis.debug('Hotheaded boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Hotheaded\",\n\t\trating: 3,\n\t},\n\tswordofrejuvenation: {\n\t\tshortDesc: \"Sword of Ruin + Regenerator.\",\n\t\tonStart(pokemon) {\n\t\t\tif (this.suppressingAbility(pokemon)) return;\n\t\t\tthis.add('-ability', pokemon, 'Sword of Rejuvenation');\n\t\t\tthis.add('-message', `${pokemon.name}'s Sword of Ruin weakened the Defense of all surrounding Pok\u00E9mon!`);\n\t\t},\n\t\tonAnyModifyDef(def, target, source, move) {\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (target.hasAbility(['Sword of Ruin', 'Sword of Rejuvenation'])) return;\n\t\t\tif (!move.ruinedDef?.hasAbility(['Sword of Ruin', 'Sword of Rejuvenation'])) move.ruinedDef = abilityHolder;\n\t\t\tif (move.ruinedDef !== abilityHolder) return;\n\t\t\tthis.debug('Sword of Ruin Def drop');\n\t\t\treturn this.chainModify(0.75);\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Sword of Rejuvenation\",\n\t},\n\tbestboost: {\n\t\tshortDesc: \"This Pokemon's highest stat can't be lowered.\",\n\t\t/* onStart(pokemon) {\n\t\t\tthis.effectState.bestStat = pokemon.getBestStat(true, true);\n\t\t}, */\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\t// const bestStat = (this.effectState.bestStat ||= target.getBestStat(true, true));\n\t\t\tconst bestStat = target.getBestStat(true, true); // check if this works\n\t\t\tif (boost[bestStat]! < 0) {\n\t\t\t\tdelete boost[bestStat];\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", bestStat, \"[from] ability: Best Boost\", `[of] ${target}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Best Boost\",\n\t\trating: 3.5,\n\t},\n\trogue: {\n\t\tshortDesc: \"Competitive + Overcoat\",\n\t\tonAfterEachBoost(boost, target, source, effect) {\n\t\t\tif (!source || target.isAlly(source)) return;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tthis.boost({ spa: 2 }, target, target, null, false, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (['sandstorm', 'hail', 'powder'].includes(type)) return false;\n\t\t},\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (move.flags['powder'] && target !== source && this.dex.getImmunity('powder', target)) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Rogue');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Rogue\",\n\t},\n\tunidentifiedflyingobject: {\n\t\t// airborneness in scripts.ts#pokemon\n\t\tshortDesc: \"Levitate effects. If this Pokemon would be hit by a Ground move, the attacker becomes confused.\",\n\t\tonTryHit(target, source, move) {\n\t\t\t// target should be airborne\n\t\t\tif (target !== source && move.type === 'Ground' && !source.volatiles['confusion'] && !(\n\t\t\t\tmove.ignoreImmunity && (move.ignoreImmunity === true || move.ignoreImmunity['Ground'])\n\t\t\t) && target.isGrounded() === null) {\n\t\t\t\tsource.addVolatile('confusion', target);\n\t\t\t\tthis.add('-immune', target);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Unidentified Flying Object\",\n\t},\n\tafterimage: {\n\t\tshortDesc: \"Illusion effects. When the illusion is broken, +1 Speed.\",\n\t\tonBeforeSwitchIn(pokemon) {\n\t\t\tpokemon.illusion = null;\n\t\t\t// yes, you can Illusion an active pokemon but only if it's to your right\n\t\t\tfor (let i = pokemon.side.pokemon.length - 1; i > pokemon.position; i--) {\n\t\t\t\tconst possibleTarget = pokemon.side.pokemon[i];\n\t\t\t\tif (!possibleTarget.fainted) {\n\t\t\t\t\t// If Ogerpon is in the last slot while the Illusion Pokemon is Terastallized\n\t\t\t\t\t// Illusion will not disguise as anything\n\t\t\t\t\tif (!pokemon.terastallized || possibleTarget.species.baseSpecies !== 'Hattepon') {\n\t\t\t\t\t\tpokemon.illusion = possibleTarget;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (target.illusion) {\n\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Afterimage'), target.abilityState, target, source, move);\n\t\t\t\tthis.boost({ spe: 1 });\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tif (pokemon.illusion) {\n\t\t\t\tthis.debug('illusion cleared');\n\t\t\t\tpokemon.illusion = null;\n\t\t\t\tconst details = pokemon.getUpdatedDetails();\n\t\t\t\tthis.add('replace', pokemon, details);\n\t\t\t\tthis.add('-end', pokemon, 'Illusion');\n\t\t\t\tif (this.ruleTable.has('illusionlevelmod')) {\n\t\t\t\t\tthis.hint(\"Illusion Level Mod is active, so this Pok\\u00e9mon's true level was hidden.\", true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonFaint(pokemon) {\n\t\t\tpokemon.illusion = null;\n\t\t},\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1 },\n\t\tname: \"Afterimage\",\n\t},\n\tprankrock: {\n\t\tshortDesc: \"Rocky Payload + Prankster\",\n\t\tonModifyPriority(priority, pokemon, target, move) {\n\t\t\tif (move?.category === 'Status') {\n\t\t\t\tmove.pranksterBoosted = true;\n\t\t\t\treturn priority + 1;\n\t\t\t}\n\t\t},\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Rock') {\n\t\t\t\tthis.debug('Riot Payload boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Rock') {\n\t\t\t\tthis.debug('Riot Payload boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Prank Rock\",\n\t},\n\ttoxicattitude: {\n\t\tshortDesc: \"Intimidate + Poison Point\",\n\t\tonStart(pokemon) {\n\t\t\tlet activated = false;\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\n\t\t\t\tif (!activated) {\n\t\t\t\t\tthis.add('-ability', pokemon, 'Toxic Attitude', 'boost');\n\t\t\t\t\tactivated = true;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['substitute']) {\n\t\t\t\t\tthis.add('-immune', target);\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({ atk: -1 }, target, pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (this.checkMoveMakesContact(move, source, target) && this.randomChance(3, 10)) {\n\t\t\t\tsource.trySetStatus('psn', target);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Toxic Attitude\",\n\t},\n\tcarelessbugs: {\n\t\tshortDesc: \"Reckless effects; x1.5 instead at 1/3 HP or less\",\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.recoil || move.hasCrashDamage) {\n\t\t\t\tthis.debug('Reckless boost');\n\t\t\t\treturn this.chainModify([attacker.hp <= attacker.maxhp / 3 ? 6144 : 4915, 4096]);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Careless Bugs\",\n\t},\n\tquickwit: {\n\t\tshortDesc: \"Speed Boost + Keen Eye\",\n\t\tonResidualOrder: 28,\n\t\tonResidualSubOrder: 2,\n\t\tonResidual(pokemon) {\n\t\t\tif (pokemon.activeTurns) {\n\t\t\t\tthis.boost({ spe: 1 });\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\tif (boost.accuracy && boost.accuracy < 0) {\n\t\t\t\tdelete boost.accuracy;\n\t\t\t\tif (!(effect as ActiveMove).secondaries) {\n\t\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"accuracy\", \"[from] ability: Quick Wit\", `[of] ${target}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreEvasion = true;\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Quick Wit\",\n\t},\n\tstonesofruin: {\n\t\tshortDesc: \"Pokemon without this ability have x0.75 Attack and deal x0.75 with super-effective hits.\",\n\t\tonStart(pokemon) {\n\t\t\tif (this.suppressingAbility(pokemon)) return;\n\t\t\tthis.add('-ability', pokemon, 'Stones of Ruin');\n\t\t\tthis.add('-message', `${pokemon.name}'s Stones of Ruin weakened the Attack of all surrounding Pok\u00E9mon and the power of their super-effective moves!`);\n\t\t},\n\t\tonAnyModifyAtk(atk, source, target, move) {\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (source.hasAbility(['Tablets of Ruin', 'Stones of Ruin'])) return;\n\t\t\tif (!move.ruinedAtk) move.ruinedAtk = abilityHolder;\n\t\t\telse if (move.ruinedAtk !== abilityHolder) return;\n\t\t\tthis.debug('Tablets of Ruin Atk drop');\n\t\t\treturn this.chainModify(0.75);\n\t\t},\n\t\tonAnyModifyDamage(damage, source, target, move) {\n\t\t\tconst abilityHolder = this.effectState.target;\n\t\t\tif (source.hasAbility('Stones of Ruin') || target.getMoveHitData(move).typeMod <= 0) return;\n\t\t\tif (!move.ruinedAtk) move.ruinedAtk = abilityHolder;\n\t\t\telse if (move.ruinedAtk !== abilityHolder) return;\n\t\t\tthis.debug('Stones of Ruin neutralize');\n\t\t\treturn this.chainModify(0.75);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Stones of Ruin\",\n\t},\n\tunstoppable: {\n\t\tshortDesc: \"Adaptability + Aroma Veil\",\n\t\tonModifySTAB(stab, source, target, move) {\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\n\t\t\t\treturn stab === 2 ? 2.25 : 2;\n\t\t\t}\n\t\t},\n\t\tonAllyTryAddVolatile(status, target, source, effect) {\n\t\t\tif (['attract', 'disable', 'encore', 'healblock', 'taunt', 'torment'].includes(status.id)) {\n\t\t\t\tif (effect.effectType === 'Move') {\n\t\t\t\t\tconst effectHolder = this.effectState.target;\n\t\t\t\t\tthis.add('-block', target, 'ability: Unstoppable', `[of] ${effectHolder}`);\n\t\t\t\t\tthis.add('-message', `${target.name} is unstoppable!`);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Unstoppable\",\n\t},\n\tsaltedlobster: {\n\t\tshortDesc: \"Adaptability + x0.5 damage from STAB; Status immunity\",\n\t\tonModifySTAB(stab, source, target, move) {\n\t\t\tif (move.forceSTAB || source.hasType(move.type)) {\n\t\t\t\treturn stab === 2 ? 2.25 : 2;\n\t\t\t}\n\t\t},\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Salted Lobster');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonTryAddVolatile(status, target) {\n\t\t\tif (status.id === 'yawn') {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Salted Lobster');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonSourceModifyAtkPriority: 6,\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (attacker.hasType(move.type)) {\n\t\t\t\tthis.debug('Purifying Salt weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifySpAPriority: 5,\n\t\tonSourceModifySpA(spa, attacker, defender, move) {\n\t\t\tif (attacker.hasType(move.type)) {\n\t\t\t\tthis.debug('Purifying Salt weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Salted Lobster\",\n\t},\n\tmiasma: {\n\t\tshortDesc: \"Misty Surge + Can poison others even in Misty Terrain\",\n\t\tonStart(source) {\n\t\t\tthis.field.setTerrain('mistyterrain');\n\t\t},\n\t\t// Poison bypassing this is implemented under Misty Terrain in moves.ts\n\t\tflags: {},\n\t\tname: \"Miasma\",\n\t},\n\tserenesync: {\n\t\tshortDesc: \"Secondaries against this Pokemon also proc against the attacker\",\n\t\tonModifySecondaries(secondaries) {\n\t\t\tconst copyProps = [\n\t\t\t\t'onHit',\n\t\t\t\t'boosts',\n\t\t\t\t'status',\n\t\t\t\t'volatileStatus',\n\t\t\t\t'sideCondition',\n\t\t\t\t'slotCondition',\n\t\t\t\t'pseudoWeather',\n\t\t\t\t'terrain',\n\t\t\t\t'weather',\n\t\t\t] as const;\n\n\t\t\tfor (const secondary of secondaries) {\n\t\t\t\tconst selfEffect: AnyObject = {};\n\n\t\t\t\tfor (const prop of copyProps) {\n\t\t\t\t\tif (secondary[prop] !== undefined) {\n\t\t\t\t\t\tselfEffect[prop] = secondary[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (Object.keys(selfEffect).length) {\n\t\t\t\t\tsecondary.self = selfEffect;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Serene Sync\",\n\t},\n\tweatheredwaves: {\n\t\tshortDesc: \"Torrent + Sturdy\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Weathered Waves boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Weathered Waves boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (move.ohko) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Weathered Waves');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagePriority: -30,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\n\t\t\t\tthis.add('-ability', target, 'Weathered Waves');\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Weathered Waves\",\n\t},\n\n\tsandsword: {\n\t\tshortDesc: \"x1.25 power to Slicing moves; x1.5 instead in Sand\",\n\t\tonBasePowerPriority: 19,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.flags['slicing']) {\n\t\t\t\tthis.debug('Sharpness boost');\n\t\t\t\treturn this.chainModify(this.field.isWeather('sandstorm') ? 1.5 : 1.25);\n\t\t\t}\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (type === 'sandstorm') return false;\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Sand Sword\",\n\t},\n\tshellfishing: {\n\t\tshortDesc: \"Torrent + Pickup\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Shell Fishing boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Water' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Shell Fishing boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonResidualOrder: 28,\n\t\tonResidualSubOrder: 2,\n\t\tonResidual(pokemon) {\n\t\t\tif (pokemon.item) return;\n\t\t\tconst pickupTargets = this.getAllActive().filter(target => (\n\t\t\t\ttarget.lastItem && target.usedItemThisTurn && pokemon.isAdjacent(target)\n\t\t\t));\n\t\t\tif (!pickupTargets.length) return;\n\t\t\tconst randomTarget = this.sample(pickupTargets);\n\t\t\tconst item = randomTarget.lastItem;\n\t\t\trandomTarget.lastItem = '';\n\t\t\tthis.add('-item', pokemon, this.dex.items.get(item), '[from] ability: Shell Fishing');\n\t\t\tpokemon.setItem(item);\n\t\t},\n\t\tflags: {},\n\t\tname: \"Shell Fishing\",\n\t},\n\telectricfence: {\n\t\tshortDesc: \"Attackers using contact or Electric attacks lose 1/8 max HP.\",\n\t\tonDamagingHitOrder: 1,\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (move && (move.type === 'Electric' || this.checkMoveMakesContact(move, source, target, true))) {\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Electric Fence\",\n\t},\n\tsturdyshock: {\n\t\tshortDesc: \"Volt Absorb + Sturdy\",\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (move.ohko) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Sturdy Shock');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagePriority: -30,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\n\t\t\t\tthis.add('-ability', target, 'Sturdy Shock');\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Sturdy Shock\",\n\t},\n\tmoltenglue: {\n\t\tshortDesc: \"Sticky Hold + Flame Body\",\n\t\tonTakeItem(item, pokemon, source) {\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\tif (!pokemon.hp || pokemon.item === 'stickybarb' || this.activeMove.ignoreAbility) return;\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Molten Glue');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (this.checkMoveMakesContact(move, source, target) && this.randomChance(3, 10)) {\n\t\t\t\tsource.trySetStatus('brn', target);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"Molten Glue\",\n\t},\n\tbullettime: {\n\t\tname: \"Bullet Time\",\n\t\tshortDesc: \"Own Tempo + Bulletproof\",\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.volatiles['confusion']) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Bullet Time');\n\t\t\t\tpokemon.removeVolatile('confusion');\n\t\t\t}\n\t\t},\n\t\tonTryAddVolatile(status, pokemon) {\n\t\t\tif (status.id === 'confusion') return null;\n\t\t},\n\t\tonHit(target, source, move) {\n\t\t\tif (move?.volatileStatus === 'confusion') {\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Bullet Time');\n\t\t\t}\n\t\t},\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (move.flags['bullet']) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Bullet Time');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif ([\n\t\t\t\t'Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude',\n\t\t\t].includes(effect.name)) {\n\t\t\t\tif (boost.atk) {\n\t\t\t\t\tdelete boost.atk;\n\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Bullet Time', `[of] ${target}`);\n\t\t\t\t}\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Bullet Time', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t},\n\tbadapple: {\n\t\tname: \"Bad Apple\",\n\t\tshortDesc: \"Own Tempo + Thick Fat\",\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.volatiles['confusion']) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Bad Apple');\n\t\t\t\tpokemon.removeVolatile('confusion');\n\t\t\t}\n\t\t},\n\t\tonTryAddVolatile(status, pokemon) {\n\t\t\tif (status.id === 'confusion') return null;\n\t\t},\n\t\tonHit(target, source, move) {\n\t\t\tif (move?.volatileStatus === 'confusion') {\n\t\t\t\tthis.add('-immune', target, 'confusion', '[from] ability: Bad Apple');\n\t\t\t}\n\t\t},\n\t\tonSourceModifyAtkPriority: 6,\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\n\t\t\t\tthis.debug('Thick Fat weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonSourceModifySpAPriority: 5,\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\n\t\t\t\tthis.debug('Thick Fat weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif ([\n\t\t\t\t'Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude',\n\t\t\t].includes(effect.name)) {\n\t\t\t\tif (boost.atk) {\n\t\t\t\t\tdelete boost.atk;\n\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Bad Apple', `[of] ${target}`);\n\t\t\t\t}\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Bad Apple', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t},\n\thealthydiet: {\n\t\tname: \"Healthy Diet\",\n\t\tshortDesc: \"Heals by 33.3% of Max HP on switch-out or when eating a berry.\",\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tonEatItem(item, pokemon) {\n\t\t\tthis.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tflags: {},\n\t},\n\tsandworm: {\n\t\tname: \"Sandworm\",\n\t\tshortDesc: \"33% chance to cure status at end of turn, 100% instead in Sandstorm\",\n\t\tonResidualOrder: 5,\n\t\tonResidualSubOrder: 3,\n\t\tonResidual(pokemon) {\n\t\t\tif (pokemon.hp && pokemon.status && (this.field.isWeather('sandstorm') || this.randomChance(33, 100))) {\n\t\t\t\tthis.debug('shed skin');\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Sandworm');\n\t\t\t\tpokemon.cureStatus();\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t},\n\tanointed: {\n\t\tname: \"Anointed\",\n\t\tshortDesc: \"Telepathy + Levitate\",\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && target.isAlly(source) && move.category !== 'Status') {\n\t\t\t\tthis.add('-activate', target, 'ability: Anointed');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t},\n\thopestar: {\n\t\tname: \"Hope Star\",\n\t\tshortDesc: \"Regenerator + Victory Star\",\n\t\tonAnyModifyAccuracyPriority: -1,\n\t\tonAnyModifyAccuracy(accuracy, target, source) {\n\t\t\tif (source.isAlly(this.effectState.target) && typeof accuracy === 'number') {\n\t\t\t\treturn this.chainModify([4506, 4096]);\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tflags: {},\n\t},\n\tfrisktaker: {\n\t\tname: \"Frisk Taker\",\n\t\tshortDesc: \"Frisk + Mold Breaker\",\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Frisk Taker');\n\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\tif (target.item) {\n\t\t\t\t\tthis.add('-item', target, target.getItem().name, '[from] ability: Frisk Taker', `[of] ${pokemon}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreAbility = true;\n\t\t},\n\t\tflags: {},\n\t},\n\thotpockets: {\n\t\tname: \"Hot Pockets\",\n\t\tshortDesc: \"Blaze + Pickpocket. Incoming Fire moves activate Pickpocket.\",\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Blaze boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender, move) {\n\t\t\tif (move.type === 'Fire' && attacker.hp <= attacker.maxhp / 3) {\n\t\t\t\tthis.debug('Blaze boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonAfterMoveSecondary(target, source, move) {\n\t\t\tif (source && source !== target && move && (move.flags['contact'] || move.type === 'Fire')) {\n\t\t\t\tif (target.item || target.switchFlag || target.forceSwitchFlag || source.switchFlag === true) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst yourItem = source.takeItem(target);\n\t\t\t\tif (!yourItem) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!target.setItem(yourItem)) {\n\t\t\t\t\tsource.item = yourItem.id;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.add('-enditem', source, yourItem, '[silent]', '[from] ability: Hot Pockets', `[of] ${source}`);\n\t\t\t\tthis.add('-item', target, yourItem, '[from] ability: Hot Pockets', `[of] ${source}`);\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t},\n\tmyceliumwaste: {\n\t\tname: \"Mycelium Waste\",\n\t\tshortDesc: \"Physical and Status moves go last in their priority bracket.\",\n\t\tonFractionalPriorityPriority: -1,\n\t\tonFractionalPriority(priority, pokemon, target, move) {\n\t\t\tif (move.category !== 'Special') {\n\t\t\t\treturn -0.1;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t},\n\tdelayedreaction: {\n\t\tname: \"Delayed Reaction\",\n\t\tshortDesc: \"Status moves go last, but ignore types and abilities.\",\n\t\tonFractionalPriorityPriority: -1,\n\t\tonFractionalPriority(priority, pokemon, target, move) {\n\t\t\tif (move.category === 'Status') {\n\t\t\t\treturn -0.1;\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move) {\n\t\t\tif (move.category === 'Status') {\n\t\t\t\tmove.ignoreAbility = true;\n\t\t\t\tmove.ignoreImmunity = true;\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t},\n\taquackintime: {\n\t\tshortDesc: \"Defiant + Pressure\",\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'A Quack in Time');\n\t\t},\n\t\tonDeductPP(target, source) {\n\t\t\tif (!target.isAlly(source)) return 1;\n\t\t},\n\t\tonAfterEachBoost(boost, target, source, effect) {\n\t\t\tif (!source || target.isAlly(source)) return;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tthis.boost({ atk: 2 }, target, target, null, false, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: {},\n\t\tname: \"A Quack in Time\",\n\t},\n\tmagicmirror: {\n\t\tshortDesc: \"Effects of Mirror Armor and Magic Bounce.\",\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\n\t\t\tnewMove.hasBounced = true;\n\t\t\tnewMove.pranksterBoosted = false;\n\t\t\tthis.actions.useMove(newMove, target, { target: source });\n\t\t\treturn null;\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (target.isAlly(source) || move.hasBounced || !move.flags['reflectable']) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\n\t\t\tnewMove.hasBounced = true;\n\t\t\tnewMove.pranksterBoosted = false;\n\t\t\tthis.actions.useMove(newMove, this.effectState.target, { target: source });\n\t\t\treturn null;\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\t// Don't bounce self stat changes, or boosts that have already bounced\n\t\t\tif (!source || target === source || !boost || ['Mirror Armor', 'Magic Mirror'].includes(effect.name)) return;\n\t\t\tlet b: BoostID;\n\t\t\tfor (b in boost) {\n\t\t\t\tif (boost[b]! < 0 && target.boosts[b] > -6) {\n\t\t\t\t\tconst negativeBoost: SparseBoostsTable = {};\n\t\t\t\t\tnegativeBoost[b] = boost[b];\n\t\t\t\t\tdelete boost[b];\n\t\t\t\t\tif (source.hp) {\n\t\t\t\t\t\tthis.add('-ability', target, 'Magic Mirror');\n\t\t\t\t\t\tthis.boost(negativeBoost, source, target, null, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tflags: { breakable: 1 },\n\t\tname: \"Magic Mirror\",\n\t},\n\t// Vanilla abilities\n\t// Extending Inner Focus's Intimidate immunity to derivatives\n\tinnerfocus: {\n\t\tinherit: true,\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif ([\n\t\t\t\t'Intimidate', 'Mad Cow', 'Forest Fury',\n\t\t\t\t'Shock Factor', 'Daunting Storm', 'Toxic Attitude',\n\t\t\t].includes(effect.name)) {\n\t\t\t\tif (boost.atk) {\n\t\t\t\t\tdelete boost.atk;\n\t\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Inner Focus', `[of] ${target}`);\n\t\t\t\t}\n\t\t\t} else if (effect.name === 'Fishy Threat' && boost.spe) {\n\t\t\t\tdelete boost.spe;\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Speed', '[from] ability: Inner Focus', `[of] ${target}`);\n\t\t\t}\n\t\t},\n\t},\n\tembodyaspectcornerstone: {\n\t\tinherit: true,\n\t\tonStart(pokemon) {\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Cornerstone-Tera' && !this.effectState.embodied) {\n\t\t\t\tthis.effectState.embodied = true;\n\t\t\t\tthis.boost({ def: 1 }, pokemon);\n\t\t\t}\n\t\t},\n\t},\n\tembodyaspecthearthflame: {\n\t\tinherit: true,\n\t\tonStart(pokemon) {\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Hearthflame-Tera' && !this.effectState.embodied) {\n\t\t\t\tthis.effectState.embodied = true;\n\t\t\t\tthis.boost({ atk: 1 }, pokemon);\n\t\t\t}\n\t\t},\n\t},\n\tembodyaspectteal: {\n\t\tinherit: true,\n\t\tonStart(pokemon) {\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Teal-Tera' && !this.effectState.embodied) {\n\t\t\t\tthis.effectState.embodied = true;\n\t\t\t\tthis.boost({ spe: 1 }, pokemon);\n\t\t\t}\n\t\t},\n\t},\n\tembodyaspectwellspring: {\n\t\tinherit: true,\n\t\tonStart(pokemon) {\n\t\t\tif (pokemon.baseSpecies.name === 'Hattepon-Wellspring-Tera' && !this.effectState.embodied) {\n\t\t\t\tthis.effectState.embodied = true;\n\t\t\t\tthis.boost({ spd: 1 }, pokemon);\n\t\t\t}\n\t\t},\n\t},\n\tnaturalcure: {\n\t\tonCheckShow(pokemon) {\n\t\t\t// This is complicated\n\t\t\t// For the most part, in-game, it's obvious whether or not Natural Cure activated,\n\t\t\t// since you can see how many of your opponent's pokemon are statused.\n\t\t\t// The only ambiguous situation happens in Doubles/Triples, where multiple pokemon\n\t\t\t// that could have Natural Cure switch out, but only some of them get cured.\n\t\t\tif (pokemon.side.active.length === 1 || pokemon.showCure === true || pokemon.showCure === false) return;\n\n\t\t\tconst cureList = [];\n\t\t\tlet noCureCount = 0;\n\t\t\tfor (const curPoke of pokemon.side.active) {\n\t\t\t\t// pokemon not statused\n\t\t\t\tif (!curPoke || !curPoke.status) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not statused or doesn't exist\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (curPoke.showCure) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: Natural Cure already known\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst species = curPoke.species;\n\t\t\t\t// pokemon can't get Natural Cure\n\t\t\t\tif (!Object.values(species.abilities).includes('Natural Cure') &&\n\t\t\t\t\t!Object.values(species.abilities).includes('Natural Pressures') &&\n\t\t\t\t\t!Object.values(species.abilities).includes('Rejuvenate')) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: no Natural Cure\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// pokemon's ability is known to be Natural Cure\n\t\t\t\tif (!species.abilities['1'] && !species.abilities['H']) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: only one ability\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// pokemon isn't switching this turn\n\t\t\t\tif (curPoke !== pokemon && !this.queue.willSwitch(curPoke)) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" skipped: not switching\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (curPoke.hasAbility(['naturalcure', 'rejuvenate', 'naturalpressures'])) {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (and is)\");\n\t\t\t\t\tcureList.push(curPoke);\n\t\t\t\t} else {\n\t\t\t\t\t// this.add('-message', \"\" + curPoke + \" confirmed: could be Natural Cure (but isn't)\");\n\t\t\t\t\tnoCureCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!cureList.length || !noCureCount) {\n\t\t\t\t// It's possible to know what pokemon were cured\n\t\t\t\tfor (const pkmn of cureList) {\n\t\t\t\t\tpkmn.showCure = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// It's not possible to know what pokemon were cured\n\n\t\t\t\t// Unlike a -hint, this is real information that battlers need, so we use a -message\n\t\t\t\tthis.add('-message', `(${cureList.length} of ${pokemon.side.name}'s pokemon ${cureList.length === 1 ? \"was\" : \"were\"} cured by Natural Cure.)`);\n\n\t\t\t\tfor (const pkmn of cureList) {\n\t\t\t\t\tpkmn.showCure = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherit: true,\n\t},\n\tneutralizinggas: {\n\t\tinherit: true,\n\t\t// Ability suppression implemented in sim/pokemon.ts:Pokemon#ignoringAbility\n\t\tonSwitchInPriority: 2,\n\t\tonSwitchIn(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Neutralizing Gas');\n\t\t\tpokemon.abilityState.ending = false;\n\t\t\tconst strongWeathers = ['desolateland', 'primordialsea', 'deltastream'];\n\t\t\tfor (const target of this.getAllActive()) {\n\t\t\t\tif (target.hasItem('Ability Shield')) {\n\t\t\t\t\tthis.add('-block', target, 'item: Ability Shield');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Can't suppress a Tatsugiri inside of Dondozo already\n\t\t\t\tif (target.volatiles['commanding']) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (target.illusion) {\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Rough Image'), target.abilityState, target, pokemon, 'neutralizinggas');\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['slowstart']) {\n\t\t\t\t\tdelete target.volatiles['slowstart'];\n\t\t\t\t\tthis.add('-end', target, 'Slow Start', '[silent]');\n\t\t\t\t}\n\t\t\t\tconst targetAbilID = target.getAbility().id;\n\t\t\t\tif (['eczema', 'prehistoricpresence'].includes(targetAbilID)) {\n\t\t\t\t\ttarget.removeVolatile('ability:unaware');\n\t\t\t\t} else if (strongWeathers.includes(targetAbilID)) {\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get(target.getAbility().id), target.abilityState, target, pokemon, 'neutralizinggas');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\t// Mainly did this so we could try to see if Quark Drive would work\n\tprotosynthesis: {\n\t\tinherit: true,\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect?.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: ' + pokemon.getAbility().name, '[fromitem]');\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: ' + pokemon.getAbility().name);\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'protosynthesis' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Protosynthesis atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Protosynthesis def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Protosynthesis spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Protosynthesis spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.debug('Protosynthesis spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Protosynthesis');\n\t\t\t},\n\t\t},\n\t\tname: \"Protosynthesis\",\n\t},\n\tquarkdrive: {\n\t\tinherit: true,\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect?.name === 'Booster Energy') {\n\t\t\t\t\tthis.effectState.fromBooster = true;\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: ' + pokemon.getAbility().name, '[fromitem]');\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: ' + pokemon.getAbility().name);\n\t\t\t\t}\n\t\t\t\tthis.effectState.bestStat = pokemon.getBestStat(false, true);\n\t\t\t\tthis.add('-start', pokemon, 'quarkdrive' + this.effectState.bestStat);\n\t\t\t},\n\t\t\tonModifyAtkPriority: 5,\n\t\t\tonModifyAtk(atk, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'atk' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive atk boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifyDefPriority: 6,\n\t\t\tonModifyDef(def, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'def' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive def boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpAPriority: 5,\n\t\t\tonModifySpA(spa, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spa' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive spa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpDPriority: 6,\n\t\t\tonModifySpD(spd, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spd' || pokemon.ignoringAbility()) return;\n\t\t\t\tthis.debug('Quark Drive spd boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t},\n\t\t\tonModifySpe(spe, pokemon) {\n\t\t\t\tif (this.effectState.bestStat !== 'spe' || pokemon.ignoringAbility()) return;\n\t\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\t\tif (target.hasAbility('dyschronometria')) {\n\t\t\t\t\t\tthis.debug('Dyschronometria negating spe boost');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.debug('Quark Drive spe boost');\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'Quark Drive');\n\t\t\t},\n\t\t},\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
